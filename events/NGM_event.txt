###############################
#######  国是用イベント ########
###############################
namespace = ngm_civic
# 青年政治
country_event = {
	id = ngm_civic.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_youth_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_ngm_got_civic_young_bonus
				}
			}
			add_trait = leader_trait_adaptable
			set_leader_flag = flag_ngm_got_civic_young_bonus
		}
	}
}

country_event = {
	id = ngm_civic.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_youth_politics
	}
	immediate = {
		modify_species = {
			species = THIS			# species to modify
			base = auto			# new base species; default: auto (uses species)
			add_trait = trait_ngm_youth_politics			# optional, can specify multiple
		}
	}
}

# 老年政治
country_event = {
	id = ngm_civic.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_elder_politics
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_ngm_got_civic_old_bonus
				}
			}
			set_skill = 4
			add_experience = 300
			set_leader_flag = flag_ngm_got_civic_old_bonus
		}
	}
}

country_event = {
	id = ngm_civic.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_elder_politics
	}
	immediate = {
		# limit = {
		# 	is_species = THIS
		# }
		modify_species = {
			species = THIS			# species to modify
			base = auto			# new base species; default: auto (uses species)
			add_trait = trait_ngm_elder_politics			# optional, can specify multiple
		}
	}
}

#19.高度な栄典制度	権威主義のみ	影響力+1	リーダースキル+1	リーダースキル上限+1	リーダー経験値+25%	リーダー雇用費用+50%	リーダー維持費+20%
country_event = {
	id = ngm_civic.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_advanced_glory_system
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_civic_ngm_advanced_glory_system
				}
			}
			set_leader_flag = flag_civic_ngm_advanced_glory_system
			set_skill = 2
		}
	}
}

# 繁栄主義者		労働者生産量+5%、交易価値+10%、平和の期間が1年続くごとに労働者生産量+0.2%、交易価値+0.5%（最大50年分）
country_event = {
	id = ngm_civic.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_prosperity_advocate
	}
	immediate = {
		set_country_flag = civic_ngm_prosperity_advocate_flag1
		if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_war_begin_flag
			}
			remove_country_flag = civic_ngm_prosperity_advocate_war_begin_flag
			set_timed_country_flag = {
				flag = civic_ngm_prosperity_advocate_war_finish_flag
				days = 1820
			}
		}
		country_event = {
			id = ngm_civic.9
			days = 1825
		}
	}
}

country_event = {
	id = ngm_civic.9
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		AND = {
			has_civic = civic_ngm_prosperity_advocate
			NOT = {
				has_country_flag = civic_ngm_prosperity_advocate_war_finish_flag
			}
			OR = {
				has_country_flag = civic_ngm_prosperity_advocate_flag1
				has_country_flag = civic_ngm_prosperity_advocate_flag2
				has_country_flag = civic_ngm_prosperity_advocate_flag3
				has_country_flag = civic_ngm_prosperity_advocate_flag4
				has_country_flag = civic_ngm_prosperity_advocate_flag5
				has_country_flag = civic_ngm_prosperity_advocate_flag6
				has_country_flag = civic_ngm_prosperity_advocate_flag7
				has_country_flag = civic_ngm_prosperity_advocate_flag8
				has_country_flag = civic_ngm_prosperity_advocate_flag9
				has_country_flag = civic_ngm_prosperity_advocate_flag10
				has_country_flag = civic_ngm_prosperity_advocate_flag11
			}
		}
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag1
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag1
			set_country_flag = civic_ngm_prosperity_advocate_flag2
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_1_advocate_modifier
				}
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag2
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag2
			set_country_flag = civic_ngm_prosperity_advocate_flag3
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_2_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_1_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_1_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag3
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag3
			set_country_flag = civic_ngm_prosperity_advocate_flag4
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_3_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_2_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_2_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag4
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag4
			set_country_flag = civic_ngm_prosperity_advocate_flag5
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_4_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_3_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_3_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag5
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag5
			set_country_flag = civic_ngm_prosperity_advocate_flag6
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_5_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_4_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_4_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag6
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag6
			set_country_flag = civic_ngm_prosperity_advocate_flag7
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_6_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_5_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_5_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag7
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag7
			set_country_flag = civic_ngm_prosperity_advocate_flag8
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_7_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_6_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_6_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag8
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag8
			set_country_flag = civic_ngm_prosperity_advocate_flag9
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_8_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_7_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_7_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				has_country_flag = civic_ngm_prosperity_advocate_flag9
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag9
			set_country_flag = civic_ngm_prosperity_advocate_flag10
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_9_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_8_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_8_advocate_modifier
			}
			country_event = {
				id = ngm_civic.9
				days = 1825
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag11
				}
			}
			set_country_flag = civic_ngm_prosperity_advocate_flag11
			every_owned_planet = {
				add_modifier = {
					modifier = civic_ngm_prosperity_10_advocate_modifier
				}
			}
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_9_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_9_advocate_modifier
			}
		}
	}
}

country_event = {
	id = ngm_civic.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_prosperity_advocate
	}
	immediate = {
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag1
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag1
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag2
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag2
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_1_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_1_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag3
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag3
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_2_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_2_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag4
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag4
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_3_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_3_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag5
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag5
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_4_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_4_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag6
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag6
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_5_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_5_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag7
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag7
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_6_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_6_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag8
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag8
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_7_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_7_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag9
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag9
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_8_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_8_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag10
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag10
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_9_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_9_advocate_modifier
			}
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = civic_ngm_prosperity_advocate_flag11
				}
			}
			remove_country_flag = civic_ngm_prosperity_advocate_flag11
			every_owned_planet = {
				limit = {
					has_modifier = civic_ngm_prosperity_10_advocate_modifier
				}
				remove_modifier = civic_ngm_prosperity_10_advocate_modifier
			}
		}
		set_country_flag = civic_ngm_prosperity_advocate_war_begin_flag
	}
}

# 刑罰の金銭代替		惑星の犯罪度*1の交易価値を惑星に付与
country_event = {
	id = ngm_civic.14
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_money_penalty
	}
	immediate = {
		every_owned_planet = {
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_1_modifier
				}
				remove_modifier = civic_ngm_money_penalty_1_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_2_modifier
				}
				remove_modifier = civic_ngm_money_penalty_2_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_3_modifier
				}
				remove_modifier = civic_ngm_money_penalty_3_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_4_modifier
				}
				remove_modifier = civic_ngm_money_penalty_4_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_5_modifier
				}
				remove_modifier = civic_ngm_money_penalty_5_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_6_modifier
				}
				remove_modifier = civic_ngm_money_penalty_6_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_7_modifier
				}
				remove_modifier = civic_ngm_money_penalty_7_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_8_modifier
				}
				remove_modifier = civic_ngm_money_penalty_8_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_9_modifier
				}
				remove_modifier = civic_ngm_money_penalty_9_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_10_modifier
				}
				remove_modifier = civic_ngm_money_penalty_10_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_11_modifier
				}
				remove_modifier = civic_ngm_money_penalty_11_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_12_modifier
				}
				remove_modifier = civic_ngm_money_penalty_12_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_13_modifier
				}
				remove_modifier = civic_ngm_money_penalty_13_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_14_modifier
				}
				remove_modifier = civic_ngm_money_penalty_14_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_15_modifier
				}
				remove_modifier = civic_ngm_money_penalty_15_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_16_modifier
				}
				remove_modifier = civic_ngm_money_penalty_16_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_17_modifier
				}
				remove_modifier = civic_ngm_money_penalty_17_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_18_modifier
				}
				remove_modifier = civic_ngm_money_penalty_18_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_19_modifier
				}
				remove_modifier = civic_ngm_money_penalty_19_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_20_modifier
				}
				remove_modifier = civic_ngm_money_penalty_20_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_21_modifier
				}
				remove_modifier = civic_ngm_money_penalty_21_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_22_modifier
				}
				remove_modifier = civic_ngm_money_penalty_22_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_23_modifier
				}
				remove_modifier = civic_ngm_money_penalty_23_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_24_modifier
				}
				remove_modifier = civic_ngm_money_penalty_24_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_25_modifier
				}
				remove_modifier = civic_ngm_money_penalty_25_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_26_modifier
				}
				remove_modifier = civic_ngm_money_penalty_26_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_27_modifier
				}
				remove_modifier = civic_ngm_money_penalty_27_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_28_modifier
				}
				remove_modifier = civic_ngm_money_penalty_28_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_29_modifier
				}
				remove_modifier = civic_ngm_money_penalty_29_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_30_modifier
				}
				remove_modifier = civic_ngm_money_penalty_30_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_31_modifier
				}
				remove_modifier = civic_ngm_money_penalty_31_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_32_modifier
				}
				remove_modifier = civic_ngm_money_penalty_32_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_33_modifier
				}
				remove_modifier = civic_ngm_money_penalty_33_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_34_modifier
				}
				remove_modifier = civic_ngm_money_penalty_34_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_35_modifier
				}
				remove_modifier = civic_ngm_money_penalty_35_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_36_modifier
				}
				remove_modifier = civic_ngm_money_penalty_36_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_37_modifier
				}
				remove_modifier = civic_ngm_money_penalty_37_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_38_modifier
				}
				remove_modifier = civic_ngm_money_penalty_38_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_39_modifier
				}
				remove_modifier = civic_ngm_money_penalty_39_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_30_modifier
				}
				remove_modifier = civic_ngm_money_penalty_30_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_31_modifier
				}
				remove_modifier = civic_ngm_money_penalty_31_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_32_modifier
				}
				remove_modifier = civic_ngm_money_penalty_32_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_33_modifier
				}
				remove_modifier = civic_ngm_money_penalty_33_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_34_modifier
				}
				remove_modifier = civic_ngm_money_penalty_34_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_35_modifier
				}
				remove_modifier = civic_ngm_money_penalty_35_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_36_modifier
				}
				remove_modifier = civic_ngm_money_penalty_36_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_37_modifier
				}
				remove_modifier = civic_ngm_money_penalty_37_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_38_modifier
				}
				remove_modifier = civic_ngm_money_penalty_38_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_39_modifier
				}
				remove_modifier = civic_ngm_money_penalty_39_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_40_modifier
				}
				remove_modifier = civic_ngm_money_penalty_40_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_41_modifier
				}
				remove_modifier = civic_ngm_money_penalty_41_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_42_modifier
				}
				remove_modifier = civic_ngm_money_penalty_42_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_43_modifier
				}
				remove_modifier = civic_ngm_money_penalty_43_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_44_modifier
				}
				remove_modifier = civic_ngm_money_penalty_44_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_45_modifier
				}
				remove_modifier = civic_ngm_money_penalty_45_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_46_modifier
				}
				remove_modifier = civic_ngm_money_penalty_46_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_47_modifier
				}
				remove_modifier = civic_ngm_money_penalty_47_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_48_modifier
				}
				remove_modifier = civic_ngm_money_penalty_48_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_49_modifier
				}
				remove_modifier = civic_ngm_money_penalty_49_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_money_penalty_50_modifier
				}
				remove_modifier = civic_ngm_money_penalty_50_modifier
			}
		}
		country_event = {
			id = ngm_civic.15
			days = 1
		}
	}
}

country_event = {
	id = ngm_civic.15
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_owned_planet = {
			if = {
				limit = {
					planet_crime > 0
					planet_crime <= 1
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_1_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 1
					planet_crime <= 2
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_2_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 2
					planet_crime <= 3
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_3_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 3
					planet_crime <= 4
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_4_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 4
					planet_crime <= 5
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_5_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 5
					planet_crime <= 6
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_6_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 6
					planet_crime <= 7
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_7_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 7
					planet_crime <= 8
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_8_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 8
					planet_crime <= 9
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_9_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 9
					planet_crime <= 10
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_10_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 10
					planet_crime <= 11
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_11_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 11
					planet_crime <= 12
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_12_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 12
					planet_crime <= 13
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_13_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 13
					planet_crime <= 14
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_14_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 14
					planet_crime <= 15
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_15_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 15
					planet_crime <= 16
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_16_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 16
					planet_crime <= 17
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_17_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 17
					planet_crime <= 18
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_18_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 18
					planet_crime <= 19
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_19_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 19
					planet_crime <= 20
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_20_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 20
					planet_crime <= 21
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_21_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 21
					planet_crime <= 22
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_22_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 22
					planet_crime <= 23
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_23_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 23
					planet_crime <= 24
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_24_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 24
					planet_crime <= 25
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_25_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 25
					planet_crime <= 26
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_26_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 26
					planet_crime <= 27
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_27_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 27
					planet_crime <= 28
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_28_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 28
					planet_crime <= 29
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_29_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 29
					planet_crime <= 30
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_30_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 30
					planet_crime <= 31
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_31_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 31
					planet_crime <= 32
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_32_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 32
					planet_crime <= 33
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_33_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 33
					planet_crime <= 34
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_34_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 34
					planet_crime <= 35
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_35_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 35
					planet_crime <= 36
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_36_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 36
					planet_crime <= 37
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_37_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 37
					planet_crime <= 38
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_38_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 38
					planet_crime <= 39
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_39_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 39
					planet_crime <= 40
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_40_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 40
					planet_crime <= 41
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_41_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 41
					planet_crime <= 42
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_42_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 42
					planet_crime <= 43
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_43_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 43
					planet_crime <= 44
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_44_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 44
					planet_crime <= 45
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_45_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 45
					planet_crime <= 46
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_46_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 46
					planet_crime <= 47
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_47_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 47
					planet_crime <= 48
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_48_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 48
					planet_crime <= 49
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_49_modifier
				}
			}
			if = {
				limit = {
					planet_crime > 49
				}
				add_modifier = {
					modifier = civic_ngm_money_penalty_50_modifier
				}
			}
		}
		country_event = {
			id = ngm_civic.14
			days = 30
		}
	}
}

# 実験的物質の発見	首都惑星の各戦略資源特性を1つずつ付与
country_event = {
	id = ngm_civic.16
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		owner = {
			has_civic = civic_ngm_experimental_substance
		}
	}
	immediate = {
		every_owned_planet = {
			planet_event = {
				id = ngm_civic.165
				days = 1
			}
		}
	}
}

planet_event = {
	id = ngm_civic.165
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		add_deposit = d_ngm_experimental_substance
	}
}

# 戦争経済	戦争疲弊-20%、戦時中の鉱物、合金、交易価値、消費財生産量+20%、建艦速度+20%。非戦争時の鉱物、合金、交易価値、消費財生産量-20%、建艦速度+20%
country_event = {
	id = ngm_civic.17
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		AND = {
			has_civic = civic_ngm_war_prosperity
			is_at_war = no
		}
	}
	immediate = {
		every_owned_planet = {
			limit = {
				NOT = {
					has_modifier = civic_ngm_war_prosperity_not_war_modifier
				}
			}
			add_modifier = {
				modifier = civic_ngm_war_prosperity_not_war_modifier
			}
		}
		add_modifier = {
			modifier = civic_ngm_war_prosperity_not_war_country_modifier
		}
		if = {
			remove_modifier = civic_ngm_war_prosperity_is_war_country_modifier
			limit = {
				has_modifier = civic_ngm_war_prosperity_is_war_country_modifier
			}
		}
		country_event = {
			id = ngm_civic.17
			days = 31
		}
	}
}

country_event = {
	id = ngm_civic.18
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_war_prosperity
	}
	immediate = {
		every_owned_planet = {
			add_modifier = {
				modifier = civic_ngm_war_prosperity_is_war_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_war_prosperity_not_war_modifier
				}
				remove_modifier = civic_ngm_war_prosperity_not_war_modifier
			}
		}
		add_modifier = {
			modifier = civic_ngm_war_prosperity_is_war_country_modifier
		}
		if = {
			limit = {
				has_modifier = civic_ngm_war_prosperity_not_war_country_modifier
			}
			remove_modifier = civic_ngm_war_prosperity_not_war_country_modifier
		}
	}
}

country_event = {
	id = ngm_civic.19
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_war_prosperity
	}
	immediate = {
		every_owned_planet = {
			add_modifier = {
				modifier = civic_ngm_war_prosperity_not_war_modifier
			}
			if = {
				limit = {
					has_modifier = civic_ngm_war_prosperity_is_war_modifier
				}
				remove_modifier = civic_ngm_war_prosperity_is_war_modifier
			}
		}
	}
}

# 異種族解剖	(排他、物質or実利)	研究力+10%、異種族は強制で奴隷化、信用値-100
country_event = {
	id = ngm_civic.20
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_dissection
	}
	immediate = {
		owner_main_species = {
			set_species_flag = civic_ngm_dissection_owner_species_flag
		}
		country_event = {
			id = ngm_civic.21
			days = 31
		}
	}
}

country_event = {
	id = ngm_civic.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_dissection
	}
	immediate = {
		every_owned_species = {
			limit = {
				NOT = {
					has_species_flag = civic_ngm_dissection_owner_species_flag
				}
			}
			set_citizenship_type = {
				type = citizenship_slavery
			}
		}
		country_event = {
			id = ngm_civic.21
			days = 31
		}
	}
}

# 伝道者団		(精神、介入)	使節+1、隣国の精神主義魅力+20%、信用値-50
country_event = {
	id = ngm_civic.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_ngm_missionary_group
	}
	immediate = {
		random_neighbor_country = {
			limit = {
				NOR = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
					has_country_flag = civic_ngm_missionary_group_country_flag
				}
			}
			add_modifier = {
				modifier = civic_ngm_missionary_group_modifier
			}
			set_country_flag = civic_ngm_missionary_group_country_flag
		}
	}
}

###############################
#######  起源用イベント ########
###############################
namespace = ngm_origin
# 律儀な古代の緩衝国家	生成イベント
country_event = {
	id = ngm_origin.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_buffer_state
	}
	immediate = {
		add_relic = r_ngm_ancient_pact
		set_global_flag = ngm_buffer_state_global_flag
		set_country_flag = ngm_buffer_state_country_flag
		# Tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = {
				save_event_target_as = previous_home_system
			}
			if = {
				limit = {
					exists = sector
				}
				sector = {
					leader = {
						unassign_leader = this
						save_event_target_as = ngm_buffer_gov
					}
				}
			}
			else = {
				root = {
					random_owned_leader = {
						limit = {
							leader_class = governor
						}
						save_event_target_as = ngm_buffer_gov
					}
				}
			}
		}
		# Spawn the Birch World System
		no_scope = {
			set_spawn_system_batch = begin
			spawn_system = {
				min_distance >= 200
				max_distance <= 300
				initializer = "ngm_buffer_state_starting_init"
				hyperlane = yes
			}
			last_created_system = {
				set_name = "Buffer Zoon"
			}
			set_spawn_system_batch = end
		}
		event_target:ngm_buffer_state_starting_system = {
			set_star_flag = empire_cluster
			set_star_flag = empire_home_system
			# Add a starbase
			create_starbase = {
				size = "starbase_starport"
				module = "shipyard"
				building = "crew_quarters"
				owner = root
				effect = {
					save_event_target_as = ngm_buffer_starbase
				}
			}
		}
		# Buildings
		event_target:ngm_buffer_state = {
			set_owner = root
			set_controller = root
			set_capital = yes
			set_sector_capital = yes
			sector = {
				assign_leader = event_target:ngm_buffer_gov
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				while = {
					count = 15
					create_pop = {
						species = owner_main_species
					}
				}
			}
			add_deposit = d_fungal_forest
			add_building = building_bureaucratic_1
			add_building = building_factory_1
			add_modifier = {
				modifier = ngm_determination_to_rebuild
				years = 20
			}
			while = {
				count = 3
				add_district = district_city
				add_district = district_industrial
				add_district = district_generator
				add_district = district_mining
			}
			if = {
				limit = {
					owner = {
						is_regular_empire = yes
					}
				}
				add_building = building_capital
				add_building = building_ngm_perpetual_palace
				add_district = district_farming
				add_district = district_farming
				add_district = district_farming
			}
			else_if = {
				limit = {
					owner = {
						is_hive_empire = yes
					}
				}
				add_building = building_hive_capital
				add_building = building_spawning_pool
			}
			else_if = {
				limit = {
					owner = {
						is_machine_empire = yes
					}
				}
				add_building = building_machine_capital
				add_building = building_machine_assembly_plant
			}
		}
		# Move player ships
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = corvette
						is_ship_size = science
					}
				}
			}
			set_location = event_target:ngm_buffer_starbase
			if = {
				limit = {
					any_owned_ship = {
						is_ship_size = corvette
					}
				}
				set_home_base = event_target:ngm_buffer_starbase
			}
		}
		# Remove the old home planet
		event_target:previous_home_planet = {
			every_owned_pop = {
				if = {
					limit = {
						is_robot_pop = no
						is_sapient = yes
					}
					modify_species = {
						ideal_planet_class = pc_relic
					}
				}
				unemploy_pop = yes
				resettle_pop = {
					pop = this
					planet = event_target:ngm_buffer_state
				}
			}
			change_pc = pc_nuked
			destroy_colony = yes
			reroll_planet = yes
		}
		event_target:ngm_buffer_state = {
			every_owned_pop = {
				unemploy_pop = yes
				clear_pop_category = yes
			}
			check_planet_employment = yes
		}
		# unclaim the old home system
		event_target:previous_home_system = {
			every_fleet_in_system = {
				delete_fleet = this
			}
			remove_star_flag = empire_home_system
			remove_star_flag = empire_cluster
			every_neighbor_system = {
				remove_star_flag = empire_cluster
				every_neighbor_system = {
					remove_star_flag = empire_cluster
				}
			}
		}
		# Set species homeworld
		owner_species = {
			set_species_homeworld = event_target:ngm_buffer_state
		}
		every_owned_pop_species = {
			set_species_homeworld = event_target:ngm_buffer_state
		}
		country_event = {
			id = ngm_origin.2
		}
	}
}

# 律儀な古代の緩衝国家	ハイパーレーン形成イベント
country_event = {
	id = ngm_origin.2
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_system = {
			limit = {
				distance = {
					type = euclidean
					source = prev
					min_distance >= 50
					max_distance <= 100
				}
			}
			random_list = {
				25 = {
					add_hyperlane = {
						from = this
						to = event_target:ngm_buffer_state_starting_system
					}
				}
				75 = {
				}
			}
		}
		every_system = {
			limit = {
				distance = {
					type = euclidean
					source = prev
					min_distance >= 0
					max_distance <= 20
				}
			}
			add_hyperlane = {
				from = this
				to = event_target:ngm_buffer_state_starting_system
			}
		}
		event_target:ngm_buffer_state_starting_system = {
			while = {
				count = 12
				random_system_planet = {
					limit = {
						OR = {
							is_asteroid = yes
							is_planet_class = pc_barren
							is_planet_class = pc_barren_cold
							is_planet_class = pc_toxic
							is_planet_class = pc_frozen
						}
					}
					random_list = {
						20 = {
							set_deposit = d_energy_2
						}
						20 = {
							set_deposit = d_minerals_2
						}
						20 = {
							set_deposit = d_rare_crystals_2
						}
						20 = {
							set_deposit = d_exotic_gases_2
						}
						20 = {
							set_deposit = d_volatile_motes_2
						}
						20 = {
							set_deposit = d_dark_matter_deposit_3
						}
						20 = {
							set_deposit = d_zro_deposit_3
						}
						20 = {
							set_deposit = d_living_metal_deposit
							set_deposit = d_living_metal_deposit
						}
					}
				}
			}
		}
	}
}

# 過去への逃走 始まり
country_event = {
	id = ngm_origin.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金とバフ
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
				add_modifier = {
					modifier = ngm_space_time_continuum_ai
				}
			}
		}
		every_owned_planet = {
			add_modifier = {
				modifier = ngm_space_time_continuum
			}
		}
		country_event = {
			id = ngm_origin.4
			days = 3600
		}
	}
}

# 過去への逃走 10年
country_event = {
	id = ngm_origin.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 16
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.5
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 20年
country_event = {
	id = ngm_origin.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 2500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 28
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 4
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.6
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 30年
country_event = {
	id = ngm_origin.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 3000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 40
									create_ship = {
										design = "NAME_PURSUER_SMALL_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 8
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_A"
										name = "Pursuer"
									}
								}
								while = {
									count = 1
									create_ship = {
										design = "NAME_PURSUER_LARGE_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.7
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 40年
country_event = {
	id = ngm_origin.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 3500
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 60
									create_ship = {
										design = "NAME_PURSUER_SMALL_B"
										name = "Pursuer"
									}
								}
								while = {
									count = 12
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_B"
										name = "Pursuer"
									}
								}
								while = {
									count = 3
									create_ship = {
										design = "NAME_PURSUER_LARGE_A"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.8
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 50年
country_event = {
	id = ngm_origin.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 4000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_SMALL_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 20
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 5
									create_ship = {
										design = "NAME_PURSUER_LARGE_C"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.9
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 60年
country_event = {
	id = ngm_origin.9
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 140
									create_ship = {
										design = "NAME_PURSUER_SMALL_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 28
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_C"
										name = "Pursuer"
									}
								}
								while = {
									count = 7
									create_ship = {
										design = "NAME_PURSUER_LARGE_C"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.10
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 70年
country_event = {
	id = ngm_origin.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 200
									create_ship = {
										design = "NAME_PURSUER_SMALL_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 60
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 12
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.11
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 80年
country_event = {
	id = ngm_origin.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 320
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 20
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.12
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 90年
country_event = {
	id = ngm_origin.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 500
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 200
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_D"
										name = "Pursuer"
									}
								}
								while = {
									count = 50
									create_ship = {
										design = "NAME_PURSUER_LARGE_D"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.13
			days = 3600			#10年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 100年
country_event = {
	id = ngm_origin.13
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 1000
									create_ship = {
										design = "NAME_PURSUER_SMALL_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 400
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_E"
										name = "Pursuer"
									}
								}
								while = {
									count = 100
									create_ship = {
										design = "NAME_PURSUER_LARGE_E"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.14
			days = 18000			#50年後
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 150年
country_event = {
	id = ngm_origin.14
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
	immediate = {
		# AIには合金
		if = {
			limit = {
				owner = {
					is_ai = yes
				}
			}
			owner = {
				add_resource = {
					alloys = 5000
				}
			}
		}
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								while = {
									count = 50000
									create_ship = {
										design = "NAME_PURSUER_SMALL_F"
										name = "Pursuer"
									}
								}
								while = {
									count = 10000
									create_ship = {
										design = "NAME_PURSUER_MEDIUM_F"
										name = "Pursuer"
									}
								}
								while = {
									count = 2500
									create_ship = {
										design = "NAME_PURSUER_LARGE_E"
										name = "Pursuer"
									}
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
		country_event = {
			id = ngm_origin.100
		}
	}
}

# 過去への逃走 来襲通知用
country_event = {
	id = ngm_origin.100
	title = ngm_origin.100.name
	desc = ngm_origin.100.desc
	picture = GFX_evt_ship_in_orbit
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_escape_to_the_past
	}
}

# 追跡者の艦隊が破壊されたとき
country_event = {
	id = ngm_origin.101
	title = ngm_origin.101.name
	desc = ngm_origin.101.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_celebration
	location = root
	is_triggered_only = yes
	trigger = {
		exists = event_target:pursuer_enemy
		from = {
			is_same_value = event_target:pursuer_enemy
		}
	}
	immediate = {
		event_target:pursuer_enemy = {
			destroy_country = yes
		}
		hidden_effect = {
			add_resource = {
				alloys = 600000
			}
		}
	}
	option = {
		name = ngm_origin.101.a
		locked_random_list = {
			15 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = engineering
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = engineering_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = physics
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = physics_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = society
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = society_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nano_forge_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = skydome_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = dimensional_fabricator_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = affluence_center_build_count
							value = 1
						}
					}
				}
			}
			3 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nourishment_center_build_count
							value = 1
						}
					}
				}
			}
			2 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = class_4_singularity_build_count
							value = 1
						}
					}
				}
			}
		}
	}
	option = {
		name = ngm_origin.101.b
		locked_random_list = {
			15 = {
				add_monthly_resource_mult = {
					resource = engineering_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = physics_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			15 = {
				add_monthly_resource_mult = {
					resource = society_research
					value = @tier5researchreward
					min = @tier5researchmin
					max = @tier5researchmax
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = engineering
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = engineering_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = physics
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = physics_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			10 = {
				add_random_research_option = {
					add_progress = 0.3
					area = society
					ignore_prereqs = yes
					fail_effects = {
						add_monthly_resource_mult = {
							resource = society_research
							value = @tier5researchreward
							min = @tier5researchmin
							max = @tier5researchmax
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nano_forge_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = skydome_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = dimensional_fabricator_build_count
							value = 1
						}
					}
				}
			}
			5 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = affluence_center_build_count
							value = 1
						}
					}
				}
			}
			3 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = nourishment_center_build_count
							value = 1
						}
					}
				}
			}
			2 = {
				hidden_effect = {
					owner = {
						change_variable = {
							which = class_4_singularity_build_count
							value = 1
						}
					}
				}
			}
		}
	}
}

# テスト用 
country_event = {
	id = ngm_origin.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_LARGE_A"
								# 	graphical_culture = "pursuer_large"
								# }
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_MEDIUM_A"
								# 	graphical_culture = "pursuer_midle"
								# }
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_SMALL_A"
									graphical_culture = "pursuer_small"
								}
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = ngm_origin.103
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_LARGE_A"
								# 	graphical_culture = "pursuer_large"
								# }
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_MEDIUM_A"
									graphical_culture = "pursuer_midle"
								}
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_SMALL_A"
								# 	graphical_culture = "pursuer_small"
								# }
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = ngm_origin.104
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			solar_system = {
				random_system_planet = {
					limit = {
						is_star = yes
					}
					save_event_target_as = local_star
				}
				create_country = {
					name = "NAME_Pursuer"
					type = faction
					auto_delete = no
					flag = {
						icon = {
							category = "special"
							file = "extradimensional_02.dds"
						}
						background = {
							category = "backgrounds"
							file = "circle.dds"
						}
						colors = {
							"black"
							"red"
							"null"
							"null"
						}
					}
					effect = {
						establish_communications_no_message = root.owner
						establish_contact = {
							who = root.owner
							location = root
						}
						save_global_event_target_as = pursuer_enemy
						create_fleet = {
							name = "Pursuer"
							settings = {
								spawn_debris = yes
							}
							effect = {
								set_owner = event_target:pursuer_enemy
								create_ship = {
									name = "Pursuer"
									design = "NAME_PURSUER_LARGE_A"
									graphical_culture = "pursuer_large"
								}
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_MEDIUM_A"
								# 	graphical_culture = "pursuer_midle"
								# }
								# create_ship = {
								# 	name = "Pursuer"
								# 	design = "NAME_PURSUER_SMALL_A"
								# 	graphical_culture = "pursuer_small"
								# }
								set_location = {
									target = event_target:local_star
									distance = 80
								}
							}
						}
					}
				}
			}
		}
	}
}

# 銀河帝国アクアリウム	生成イベント
country_event = {
	id = ngm_origin.1000
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_galactic_empire_aquarium
	}
	immediate = {
		add_relic = r_ngm_geid
		set_global_flag = ngm_galactic_empire_aquarium_global_flag
		set_country_flag = ngm_galactic_empire_aquarium_country_flag
		# Tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = {
				save_event_target_as = previous_home_system
			}
			if = {
				limit = {
					exists = sector
				}
				sector = {
					leader = {
						unassign_leader = this
						save_event_target_as = ngm_galactic_empire_aquarium_gov
					}
				}
			}
			else = {
				root = {
					random_owned_leader = {
						limit = {
							leader_class = governor
						}
						save_event_target_as = ngm_galactic_empire_aquarium_gov
					}
				}
			}
		}
		set_spawn_system_batch = begin
		no_scope = {
			spawn_system = {
				min_distance >= 450
				max_distance <= 450
				min_orientation_angle = 135
				max_orientation_angle = 135
				initializer = "ngm_galactic_empire_aquarium_starting_init"
				hyperlane = no
				effect = {
					save_global_event_target_as = ngm_galactic_empire_aquarium1
				}
			}
			last_created_system = {
				set_name = "Aquarium"
			}
			event_target:ngm_galactic_empire_aquarium1 = {
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 0
					max_orientation_angle = 0
					initializer = "ngm_galactic_empire_aquarium_starting_pulsar"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_galactic_empire_aquarium2
					}
				}
				last_created_system = {
					set_name = "Park Clock"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 180
					max_orientation_angle = 180
					initializer = "ngm_galactic_empire_aquarium_starting_black_hole"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_galactic_empire_aquarium3
					}
				}
				last_created_system = {
					set_name = "Park Out"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = 90
					max_orientation_angle = 90
					initializer = "ngm_galactic_empire_aquarium_starting_upper_gate"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_galactic_empire_aquarium4
					}
				}
				last_created_system = {
					set_name = "Upper Gate"
				}
				spawn_system = {
					min_distance >= 5
					max_distance <= 5
					min_orientation_angle = -90
					max_orientation_angle = -90
					initializer = "ngm_galactic_empire_aquarium_starting_under_gate"
					hyperlane = no
					effect = {
						save_global_event_target_as = ngm_galactic_empire_aquarium5
					}
				}
				last_created_system = {
					set_name = "Under Gate"
				}
			}
		}
		# add hyperlanes
		event_target:ngm_galactic_empire_aquarium1 = {
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium1
				to = event_target:ngm_galactic_empire_aquarium2
			}
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium1
				to = event_target:ngm_galactic_empire_aquarium3
			}
		}
		event_target:ngm_galactic_empire_aquarium4 = {
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium4
				to = event_target:ngm_galactic_empire_aquarium2
			}
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium4
				to = event_target:ngm_galactic_empire_aquarium3
			}
		}
		event_target:ngm_galactic_empire_aquarium5 = {
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium5
				to = event_target:ngm_galactic_empire_aquarium2
			}
			add_hyperlane = {
				from = event_target:ngm_galactic_empire_aquarium5
				to = event_target:ngm_galactic_empire_aquarium3
			}
		}
		set_spawn_system_batch = end
		# Add a wormhole
		random_system = {
			limit = {
				NOR = {
					has_natural_wormhole = yes
					starting_system = yes
					has_star_flag = empire_cluster
				}
				distance = {
					source = prev
					min_distance >= 500
				}
			}
			event_target:ngm_galactic_empire_aquarium4 = {
				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = event_target:ngm_galactic_empire_aquarium4
		}
		random_system = {
			limit = {
				NOR = {
					has_natural_wormhole = yes
					starting_system = yes
					has_star_flag = empire_cluster
				}
				distance = {
					source = prev
					min_distance >= 500
				}
			}
			event_target:ngm_galactic_empire_aquarium5 = {
				# done this way to ensure we don't spawn "orphan" wormholes (wormholes that aren't linked to anything)
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = event_target:ngm_galactic_empire_aquarium5
		}
		# Add a starbase
		event_target:ngm_galactic_empire_aquarium_starting_system = {
			create_starbase = {
				size = "starbase_starport"
				module = "shipyard"
				building = "crew_quarters"
				owner = root
				effect = {
					save_event_target_as = ngm_galactic_empire_aquarium_starbase
				}
			}
		}
		event_target:ngm_galactic_empire_aquarium_pulsar_system = {
			create_starbase = {
				size = starbase_outpost
				owner = root
			}
		}
		event_target:ngm_galactic_empire_aquarium_black_hole_system = {
			create_starbase = {
				size = starbase_outpost
				owner = root
			}
		}
		event_target:ngm_galactic_empire_aquarium_upper_gate_system = {
			create_starbase = {
				size = starbase_outpost
				owner = root
			}
		}
		event_target:ngm_galactic_empire_aquarium_under_gate_system = {
			create_starbase = {
				size = starbase_outpost
				owner = root
			}
		}
		# Move player ships
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = corvette
						is_ship_size = science
					}
				}
			}
			set_location = event_target:ngm_galactic_empire_aquarium
			if = {
				limit = {
					any_owned_ship = {
						is_ship_size = corvette
					}
				}
				set_home_base = event_target:ngm_galactic_empire_aquarium
			}
		}
		# Remove the old home planet
		event_target:previous_home_planet = {
			every_owned_pop = {
				if = {
					limit = {
						is_robot_pop = no
						is_sapient = yes
					}
					modify_species = {
						ideal_planet_class = pc_ocean
					}
				}
				unemploy_pop = yes
				resettle_pop = {
					pop = this
					planet = event_target:ngm_galactic_empire_aquarium
				}
			}
			change_pc = pc_nuked
			destroy_colony = yes
			reroll_planet = yes
		}
		event_target:ngm_galactic_empire_aquarium = {
			every_owned_pop = {
				unemploy_pop = yes
				clear_pop_category = yes
			}
			check_planet_employment = yes
		}
		# unclaim the old home system
		event_target:previous_home_system = {
			every_fleet_in_system = {
				delete_fleet = this
			}
			remove_star_flag = empire_home_system
			remove_star_flag = empire_cluster
			every_neighbor_system = {
				remove_star_flag = empire_cluster
				every_neighbor_system = {
					remove_star_flag = empire_cluster
				}
			}
		}
		# Set species homeworld
		owner_species = {
			set_species_homeworld = event_target:ngm_galactic_empire_aquarium
		}
		every_owned_pop_species = {
			set_species_homeworld = event_target:ngm_galactic_empire_aquarium
		}
		add_research_option = tech_wormhole_stabilization
		owner = {
			set_country_flag = encountered_first_wormhole
			add_seen_bypass_type = wormhole
		}
		country_event = {
			id = ngm_origin.1001
		}
		country_event = {
			id = game_start.9
		}
		country_event = {
			id = distar.3043
		}
	}
}

# 銀河帝国アクアリウム	建築物生成イベント
country_event = {
	id = ngm_origin.1001
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_ngm_galactic_empire_aquarium
	}
	immediate = {
		# Buildings
		event_target:ngm_galactic_empire_aquarium = {
			set_owner = root
			set_controller = root
			set_capital = yes
			set_sector_capital = yes
			sector = {
				assign_leader = event_target:ngm_galactic_empire_aquarium_gov
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				while = {
					count = 15
					create_pop = {
						species = owner_main_species
					}
				}
			}
			add_deposit = d_fungal_forest
			add_building = building_capital
			add_building = building_ngm_garden_palace
			add_building = building_ngm_aquarium_central_gate
			add_building = building_ngm_great_ocean_temple
			add_building = building_bureaucratic_1
			add_building = building_factory_1
			add_building = building_research_lab_1
			add_district = ngm_district_arcology_marine_fisheries_research
			add_district = ngm_district_arcology_marine_housing
			add_district = ngm_district_arcology_marine_administrative_Organization
			add_district = ngm_district_arcology_marine_health_care
			add_district = ngm_district_arcology_marine_water_park
		}
	}
}

###############################
#######  連邦用イベント ########
###############################
namespace = ngm_federation
country_event = {
	id = ngm_federation.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		federation = {
			has_federation_perk = NGM_PU_TPP
		}
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_NGM_PU_TPP_bonus
				}
			}
			set_leader_flag = flag_NGM_PU_TPP_bonus
			set_skill = 2
		}
	}
}

###############################
######  policy用イベント #######
###############################
namespace = ngm_policy
country_event = {
	id = ngm_policy.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			is_country_type = default
			is_country_type = fallen_empire
		}
	}
	immediate = {
		#人口政策	Population Policy
		set_policy = {
			policy = ngm_policies_population_stance
			option = NAME_NGM_population_stance_non_non
			cooldown = no
		}
		# 一般国家新政策 (特筆ない限り☆がデフォルト)
		set_policy = {
			policy = ngm_policies_civil_law
			option = NAME_NGM_maintaining_order
			cooldown = no
		}
		# 〇刑法
		set_policy = {
			policy = ngm_policies_criminal_law
			option = NAME_NGM_maintaining_order_cri
			cooldown = no
		}
		# 議会制度	独裁制と君主制以外デフォルト
		if = {
			limit = {
				NOR = {
					has_authority = auth_imperial
					has_authority = auth_dictatorial
				}
			}
			set_policy = {
				policy = ngm_policies_parliamentarism
				option = NAME_NGM_unicameral_system
				cooldown = no
			}
		}
		# 議会制度	独裁制と君主制デフォルト
		if = {
			limit = {
				OR = {
					has_authority = auth_imperial
					has_authority = auth_dictatorial
				}
			}
			set_policy = {
				policy = ngm_policies_parliamentarism
				option = NAME_NGM_unicameral_system
				cooldown = no
			}
		}
		# 選挙制度
		set_policy = {
			policy = ngm_policies_electoral_system
			option = NAME_NGM_maze
			cooldown = no
		}
		# 選挙法 
		set_policy = {
			policy = ngm_policies_election_law
			option = NAME_NGM_maze_e
			cooldown = no
		}
		# 公務員任用制度
		set_policy = {
			policy = ngm_policies_civil_service_appointments_system
			option = NAME_NGM_hybrid
			cooldown = no
		}
		# 納税制度
		set_policy = {
			policy = ngm_policies_taxation_system
			option = NAME_NGM_general_tax_system
			cooldown = no
		}
		# 所得税
		set_policy = {
			policy = ngm_policies_income_tax
			option = NAME_NGM_a_income
			cooldown = no
		}
		# 法人税
		set_policy = {
			policy = ngm_policies_corporation_tax
			option = NAME_NGM_a_corp_tax
			cooldown = no
		}
		# 文化政策
		set_policy = {
			policy = ngm_policies_cultural_policy
			option = NAME_NGM_private_initiative
			cooldown = no
		}
		# 国家祭典
		set_policy = {
			policy = ngm_policies_national_ceremony
			option = NAME_NGM_ceremony
			cooldown = no
		}
		# 農業政策
		set_policy = {
			policy = ngm_policies_agricultural_policy
			option = NAME_NGM_no_agricultural_incentives
			cooldown = no
		}
		# 言語政策
		set_policy = {
			policy = ngm_policies_language_policy
			option = NAME_NGM_common_language_policy
			cooldown = no
		}
		# 研究倫理
		set_policy = {
			policy = ngm_policies_research_ethics
			option = NAME_NGM_ethical
			cooldown = no
		}
		# 過激思想規制
		set_policy = {
			policy = ngm_policies_SNS_regulation
			option = NAME_NGM_ext_restriction
			cooldown = no
		}
		# 武器輸出法
		set_policy = {
			policy = ngm_policies_weapon_export_law
			option = NAME_NGM_ave_exp
			cooldown = no
		}
		# 情報法
		set_policy = {
			policy = ngm_policies_information_law
			option = NAME_NGM_nat_save
			cooldown = no
		}
		# 軍法
		set_policy = {
			policy = ngm_policies_martial_law
			option = NAME_NGM_court_martial
			cooldown = no
		}
		# 治安法
		set_policy = {
			policy = ngm_policies_sheriffs_law
			option = NAME_NGM_pub_erd
			cooldown = no
		}
		# 放送法
		set_policy = {
			policy = ngm_policies_broadcast_law
			option = NAME_NGM_non_limit
			cooldown = no
		}
	}
}

#############################
######  伝統用イベント #######
#############################
namespace = ngm_tradition
# 大規模建築計画局
country_event = {
	id = ngm_tradition.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# add_research_option = tech_mega_engineering
		add_tech_progress = {
			tech = tech_mega_engineering
			progress = 0.5
		}
	}
}

# 研鑽(自らを磨き、高みへと目指すことこそが求められる)
# リーダーが特殊な特性をアンロック。初期リーダーが複数の特性を有している
country_event = {
	id = ngm_tradition.2
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_study_finish
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_civic_ngm_advanced_glory_system
				}
				leader_class = governor
			}
			set_leader_flag = flag_civic_ngm_advanced_glory_system
			if = {
				limit = {
					NOR = {
						has_trait = leader_trait_ngm_economist
						has_trait = leader_trait_ngm_coordinator
						has_trait = leader_trait_ngm_governor_upstream
						has_trait = leader_trait_ngm_governor_veteran
					}
				}
				random_list = {
					10 = {
						add_trait = leader_trait_ngm_economist
					}
					10 = {
						add_trait = leader_trait_ngm_coordinator
					}
					10 = {
						add_trait = leader_trait_ngm_governor_upstream
					}
					10 = {
						add_trait = leader_trait_ngm_governor_veteran
					}
					40 = {
					}
				}
			}
		}
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_civic_ngm_advanced_glory_system
				}
				leader_class = scientist
			}
			set_leader_flag = flag_civic_ngm_advanced_glory_system
			if = {
				limit = {
					NOR = {
						has_trait = leader_trait_ngm_scientocrats
						has_trait = leader_trait_ngm_army_brat
						has_trait = leader_trait_ngm_intuition
						has_trait = leader_trait_ngm_flexibility
						has_trait = leader_trait_ngm_scientist_upstream
						has_trait = leader_trait_ngm_scientist_veteran
					}
				}
				random_list = {
					10 = {
						add_trait = leader_trait_ngm_scientocrats
					}
					10 = {
						add_trait = leader_trait_ngm_army_brat
					}
					10 = {
						add_trait = leader_trait_ngm_intuition
					}
					10 = {
						add_trait = leader_trait_ngm_flexibility
					}
					10 = {
						add_trait = leader_trait_ngm_scientist_upstream
					}
					10 = {
						add_trait = leader_trait_ngm_scientist_veteran
					}
					60 = {
					}
				}
			}
		}
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_civic_ngm_advanced_glory_system
				}
				leader_class = admiral
			}
			set_leader_flag = flag_civic_ngm_advanced_glory_system
			if = {
				limit = {
					NOR = {
						has_trait = leader_trait_ngm_admiral_military_bureaucracy
						has_trait = leader_trait_ngm_admiral_from_the_general_staff
						has_trait = leader_trait_ngm_admiral_flexibility
						has_trait = leader_trait_ngm_admiral_decisive
						has_trait = leader_trait_ngm_admiral_staff_team
						has_trait = leader_trait_ngm_admiral_upstream
						has_trait = leader_trait_ngm_admiral_veteran
					}
				}
				random_list = {
					10 = {
						add_trait = leader_trait_ngm_admiral_military_bureaucracy
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_from_the_general_staff
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_flexibility
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_decisive
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_staff_team
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_upstream
					}
					10 = {
						add_trait = leader_trait_ngm_admiral_veteran
					}
					70 = {
					}
				}
			}
		}
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_civic_ngm_advanced_glory_system
				}
				leader_class = general
			}
			set_leader_flag = flag_civic_ngm_advanced_glory_system
			if = {
				limit = {
					NOR = {
						has_trait = leader_trait_ngm_general_military_bureaucracy
						has_trait = leader_trait_ngm_general_from_the_general_staff
						has_trait = leader_trait_ngm_general_flexibility
						has_trait = leader_trait_ngm_general_decisive
						has_trait = leader_trait_ngm_general_staff_team
						has_trait = leader_trait_ngm_general_upstream
						has_trait = leader_trait_ngm_general_veteran
					}
				}
				random_list = {
					10 = {
						add_trait = leader_trait_ngm_general_military_bureaucracy
					}
					10 = {
						add_trait = leader_trait_ngm_general_from_the_general_staff
					}
					10 = {
						add_trait = leader_trait_ngm_general_flexibility
					}
					10 = {
						add_trait = leader_trait_ngm_general_decisive
					}
					10 = {
						add_trait = leader_trait_ngm_general_staff_team
					}
					10 = {
						add_trait = leader_trait_ngm_general_upstream
					}
					10 = {
						add_trait = leader_trait_ngm_general_veteran
					}
					70 = {
					}
				}
			}
		}
	}
}

# 研鑽(自らを磨き、高みへと目指すことこそが求められる)
# 3.資格採用の強化:リーダー初期レベル+1
country_event = {
	id = ngm_tradition.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_leader_study
	}
	immediate = {
		every_owned_leader = {
			limit = {
				NOT = {
					has_leader_flag = flag_tr_ngm_leader_study
				}
			}
			set_leader_flag = flag_tr_ngm_leader_study
			add_experience = 200
		}
	}
}

# 前衛(新たな試みと反秩序こそ自己を表現することができる)
# 完遂時:取得している国是をすべて削除する
country_event = {
	id = ngm_tradition.4
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				has_civic = civic_corvee_system
			}
			force_remove_civic = civic_corvee_system
		}
		if = {
			limit = {
				has_civic = civic_imperial_cult
			}
			force_remove_civic = civic_imperial_cult
		}
		if = {
			limit = {
				has_civic = civic_beacon_of_liberty
			}
			force_remove_civic = civic_beacon_of_liberty
		}
		if = {
			limit = {
				has_civic = civic_exalted_priesthood
			}
			force_remove_civic = civic_exalted_priesthood
		}
		if = {
			limit = {
				has_civic = civic_philosopher_king
			}
			force_remove_civic = civic_philosopher_king
		}
		if = {
			limit = {
				has_civic = civic_meritocracy
			}
			force_remove_civic = civic_meritocracy
		}
		if = {
			limit = {
				has_civic = civic_citizen_service
			}
			force_remove_civic = civic_citizen_service
		}
		if = {
			limit = {
				has_civic = civic_technocracy
			}
			force_remove_civic = civic_technocracy
		}
		if = {
			limit = {
				has_civic = civic_feudal_realm
			}
			force_remove_civic = civic_feudal_realm
		}
		if = {
			limit = {
				has_civic = civic_police_state
			}
			force_remove_civic = civic_police_state
		}
		if = {
			limit = {
				has_civic = civic_idealistic_foundation
			}
			force_remove_civic = civic_idealistic_foundation
		}
		if = {
			limit = {
				has_civic = civic_environmentalist
			}
			force_remove_civic = civic_environmentalist
		}
		if = {
			limit = {
				has_civic = civic_slaver_guilds
			}
			force_remove_civic = civic_slaver_guilds
		}
		if = {
			limit = {
				has_civic = civic_inwards_perfection
			}
			force_remove_civic = civic_inwards_perfection
		}
		if = {
			limit = {
				has_civic = civic_warrior_culture
			}
			force_remove_civic = civic_warrior_culture
		}
		if = {
			limit = {
				has_civic = civic_distinguished_admiralty
			}
			force_remove_civic = civic_distinguished_admiralty
		}
		if = {
			limit = {
				has_civic = civic_free_haven
			}
			force_remove_civic = civic_free_haven
		}
		if = {
			limit = {
				has_civic = civic_cutthroat_politics
			}
			force_remove_civic = civic_cutthroat_politics
		}
		if = {
			limit = {
				has_civic = civic_corporate_dominion
			}
			force_remove_civic = civic_corporate_dominion
		}
		if = {
			limit = {
				has_civic = civic_agrarian_idyll
			}
			force_remove_civic = civic_agrarian_idyll
		}
		if = {
			limit = {
				has_civic = civic_shadow_council
			}
			force_remove_civic = civic_shadow_council
		}
		if = {
			limit = {
				has_civic = civic_mining_guilds
			}
			force_remove_civic = civic_mining_guilds
		}
		if = {
			limit = {
				has_civic = civic_parliamentary_system
			}
			force_remove_civic = civic_parliamentary_system
		}
		if = {
			limit = {
				has_civic = civic_efficient_bureaucracy
			}
			force_remove_civic = civic_efficient_bureaucracy
		}
		if = {
			limit = {
				has_civic = civic_nationalistic_zeal
			}
			force_remove_civic = civic_nationalistic_zeal
		}
		if = {
			limit = {
				has_civic = civic_functional_architecture
			}
			force_remove_civic = civic_functional_architecture
		}
		if = {
			limit = {
				has_civic = civic_aristocratic_elite
			}
			force_remove_civic = civic_aristocratic_elite
		}
		if = {
			limit = {
				has_civic = civic_shared_burden
			}
			force_remove_civic = civic_shared_burden
		}
		if = {
			limit = {
				has_civic = civic_fanatic_purifiers
			}
			force_remove_civic = civic_fanatic_purifiers
		}
		if = {
			limit = {
				has_civic = civic_barbaric_despoilers
			}
			force_remove_civic = civic_barbaric_despoilers
		}
		if = {
			limit = {
				has_civic = civic_byzantine_bureaucracy
			}
			force_remove_civic = civic_byzantine_bureaucracy
		}
		if = {
			limit = {
				has_civic = civic_merchant_guilds
			}
			force_remove_civic = civic_merchant_guilds
		}
		if = {
			limit = {
				has_civic = civic_reanimated_armies
			}
			force_remove_civic = civic_reanimated_armies
		}
		if = {
			limit = {
				has_civic = civic_diplomatic_corps
			}
			force_remove_civic = civic_diplomatic_corps
		}
		if = {
			limit = {
				has_civic = civic_death_cult
			}
			force_remove_civic = civic_death_cult
		}
		if = {
			limit = {
				has_civic = civic_memorialist
			}
			force_remove_civic = civic_memorialist
		}
		if = {
			limit = {
				has_civic = civic_catalytic_processing
			}
			force_remove_civic = civic_catalytic_processing
		}
		if = {
			limit = {
				has_civic = civic_crafters
			}
			force_remove_civic = civic_crafters
		}
		if = {
			limit = {
				has_civic = civic_pleasure_seekers
			}
			force_remove_civic = civic_pleasure_seekers
		}
		if = {
			limit = {
				has_civic = civic_idyllic_bloom
			}
			force_remove_civic = civic_idyllic_bloom
		}
		if = {
			limit = {
				has_civic = civic_hive_subspace_ephapse
			}
			force_remove_civic = civic_hive_subspace_ephapse
		}
		if = {
			limit = {
				has_civic = civic_hive_natural_neural_network
			}
			force_remove_civic = civic_hive_natural_neural_network
		}
		if = {
			limit = {
				has_civic = civic_hive_ascetic
			}
			force_remove_civic = civic_hive_ascetic
		}
		if = {
			limit = {
				has_civic = civic_hive_one_mind
			}
			force_remove_civic = civic_hive_one_mind
		}
		if = {
			limit = {
				has_civic = civic_hive_divided_attention
			}
			force_remove_civic = civic_hive_divided_attention
		}
		if = {
			limit = {
				has_civic = civic_hive_strength_of_legions
			}
			force_remove_civic = civic_hive_strength_of_legions
		}
		if = {
			limit = {
				has_civic = civic_hive_subsumed_will
			}
			force_remove_civic = civic_hive_subsumed_will
		}
		if = {
			limit = {
				has_civic = civic_hive_pooled_knowledge
			}
			force_remove_civic = civic_hive_pooled_knowledge
		}
		if = {
			limit = {
				has_civic = civic_hive_devouring_swarm
			}
			force_remove_civic = civic_hive_devouring_swarm
		}
		if = {
			limit = {
				has_civic = civic_hive_empath
			}
			force_remove_civic = civic_hive_empath
		}
		if = {
			limit = {
				has_civic = civic_hive_memorialist
			}
			force_remove_civic = civic_hive_memorialist
		}
		if = {
			limit = {
				has_civic = civic_hive_catalytic_processing
			}
			force_remove_civic = civic_hive_catalytic_processing
		}
		if = {
			limit = {
				has_civic = civic_hive_idyllic_bloom
			}
			force_remove_civic = civic_hive_idyllic_bloom
		}
		if = {
			limit = {
				has_civic = civic_machine_servitor
			}
			force_remove_civic = civic_machine_servitor
		}
		if = {
			limit = {
				has_civic = civic_machine_terminator
			}
			force_remove_civic = civic_machine_terminator
		}
		if = {
			limit = {
				has_civic = civic_machine_assimilator
			}
			force_remove_civic = civic_machine_assimilator
		}
		if = {
			limit = {
				has_civic = civic_machine_builder
			}
			force_remove_civic = civic_machine_builder
		}
		if = {
			limit = {
				has_civic = civic_machine_factory_overclock
			}
			force_remove_civic = civic_machine_factory_overclock
		}
		if = {
			limit = {
				has_civic = civic_machine_unitary_cohesion
			}
			force_remove_civic = civic_machine_unitary_cohesion
		}
		if = {
			limit = {
				has_civic = civic_machine_rockbreakers
			}
			force_remove_civic = civic_machine_rockbreakers
		}
		if = {
			limit = {
				has_civic = civic_machine_zero_waste_protocols
			}
			force_remove_civic = civic_machine_zero_waste_protocols
		}
		if = {
			limit = {
				has_civic = civic_machine_built_to_last
			}
			force_remove_civic = civic_machine_built_to_last
		}
		if = {
			limit = {
				has_civic = civic_machine_ota_updates
			}
			force_remove_civic = civic_machine_ota_updates
		}
		if = {
			limit = {
				has_civic = civic_machine_warbots
			}
			force_remove_civic = civic_machine_warbots
		}
		if = {
			limit = {
				has_civic = civic_machine_introspective
			}
			force_remove_civic = civic_machine_introspective
		}
		if = {
			limit = {
				has_civic = civic_machine_delegated_functions
			}
			force_remove_civic = civic_machine_delegated_functions
		}
		if = {
			limit = {
				has_civic = civic_machine_predictive_analysis
			}
			force_remove_civic = civic_machine_predictive_analysis
		}
		if = {
			limit = {
				has_civic = civic_machine_replication
			}
			force_remove_civic = civic_machine_replication
		}
		if = {
			limit = {
				has_civic = civic_machine_maintenance_protocols
			}
			force_remove_civic = civic_machine_maintenance_protocols
		}
		if = {
			limit = {
				has_civic = civic_machine_memorialist
			}
			force_remove_civic = civic_machine_memorialist
		}
		if = {
			limit = {
				has_civic = civic_machine_catalytic_processing
			}
			force_remove_civic = civic_machine_catalytic_processing
		}
		if = {
			limit = {
				has_civic = civic_franchising
			}
			force_remove_civic = civic_franchising
		}
		if = {
			limit = {
				has_civic = civic_trading_posts
			}
			force_remove_civic = civic_trading_posts
		}
		if = {
			limit = {
				has_civic = civic_media_conglomerate
			}
			force_remove_civic = civic_media_conglomerate
		}
		if = {
			limit = {
				has_civic = civic_naval_contractors
			}
			force_remove_civic = civic_naval_contractors
		}
		if = {
			limit = {
				has_civic = civic_free_traders
			}
			force_remove_civic = civic_free_traders
		}
		if = {
			limit = {
				has_civic = civic_private_prospectors
			}
			force_remove_civic = civic_private_prospectors
		}
		if = {
			limit = {
				has_civic = civic_gospel_of_the_masses
			}
			force_remove_civic = civic_gospel_of_the_masses
		}
		if = {
			limit = {
				has_civic = civic_ruthless_competition
			}
			force_remove_civic = civic_ruthless_competition
		}
		if = {
			limit = {
				has_civic = civic_criminal_heritage
			}
			force_remove_civic = civic_criminal_heritage
		}
		if = {
			limit = {
				has_civic = civic_private_military_companies
			}
			force_remove_civic = civic_private_military_companies
		}
		if = {
			limit = {
				has_civic = civic_indentured_assets
			}
			force_remove_civic = civic_indentured_assets
		}
		if = {
			limit = {
				has_civic = civic_brand_loyalty
			}
			force_remove_civic = civic_brand_loyalty
		}
		if = {
			limit = {
				has_civic = civic_public_relations_specialists
			}
			force_remove_civic = civic_public_relations_specialists
		}
		if = {
			limit = {
				has_civic = civic_death_cult_corporate
			}
			force_remove_civic = civic_death_cult_corporate
		}
		if = {
			limit = {
				has_civic = civic_corporate_catalytic_processing
			}
			force_remove_civic = civic_corporate_catalytic_processing
		}
		if = {
			limit = {
				has_civic = civic_corporate_hedonism
			}
			force_remove_civic = civic_corporate_hedonism
		}
		if = {
			limit = {
				has_civic = civic_corporate_crafters
			}
			force_remove_civic = civic_corporate_crafters
		}
		if = {
			limit = {
				has_civic = civic_sham_constitutionalism
			}
			force_remove_civic = civic_sham_constitutionalism
		}
		if = {
			limit = {
				has_civic = civic_substantive_constitutionalism
			}
			force_remove_civic = civic_substantive_constitutionalism
		}
		if = {
			limit = {
				has_civic = civic_noblesse_oblige
			}
			force_remove_civic = civic_noblesse_oblige
		}
		if = {
			limit = {
				has_civic = civic_non_retention_of_force
			}
			force_remove_civic = civic_non_retention_of_force
		}
		if = {
			limit = {
				has_civic = civic_symbolic_monarchy
			}
			force_remove_civic = civic_symbolic_monarchy
		}
		if = {
			limit = {
				has_civic = civic_cramming_for_education
			}
			force_remove_civic = civic_cramming_for_education
		}
		# if = {
		# 	limit = {
		# 		has_civic = civic_lax_building_codes
		# 	}
		# 	force_remove_civic = civic_lax_building_codes
		# }
		if = {
			limit = {
				has_civic = civic_truth_and_reconciliation_commission
			}
			force_remove_civic = civic_truth_and_reconciliation_commission
		}
		# if = {
		# 	limit = {
		# 		has_civic = civic_national_sacrifice
		# 	}
		# 	force_remove_civic = civic_national_sacrifice
		# }
		if = {
			limit = {
				has_civic = civic_neoliberalism
			}
			force_remove_civic = civic_neoliberalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_manifest_destiny
			}
			force_remove_civic = civic_ngm_manifest_destiny
		}
		if = {
			limit = {
				has_civic = civic_ngm_separation_of_powers
			}
			force_remove_civic = civic_ngm_separation_of_powers
		}
		if = {
			limit = {
				has_civic = civic_ngm_separation_of_powers
			}
			force_remove_civic = civic_ngm_separation_of_powers
		}
		if = {
			limit = {
				has_civic = civic_ngm_kakistocracy
			}
			force_remove_civic = civic_ngm_kakistocracy
		}
		if = {
			limit = {
				has_civic = civic_ngm_enlightenment
			}
			force_remove_civic = civic_ngm_enlightenment
		}
		if = {
			limit = {
				has_civic = civic_ngm_youth_politics
			}
			force_remove_civic = civic_ngm_youth_politics
		}
		if = {
			limit = {
				has_civic = civic_ngm_elder_politics
			}
			force_remove_civic = civic_ngm_elder_politics
		}
		if = {
			limit = {
				has_civic = civic_ngm_advanced_glory_system
			}
			force_remove_civic = civic_ngm_advanced_glory_system
		}
		if = {
			limit = {
				has_civic = civic_ngm_culturism
			}
			force_remove_civic = civic_ngm_culturism
		}
		if = {
			limit = {
				has_civic = civic_ngm_imaginary_socialism
			}
			force_remove_civic = civic_ngm_imaginary_socialism
		}
		if = {
			limit = {
				has_civic = civic_ngm_fundamental_insanity
			}
			force_remove_civic = civic_ngm_fundamental_insanity
		}
		if = {
			limit = {
				has_civic = civic_ngm_individualistic_rationalist
			}
			force_remove_civic = civic_ngm_individualistic_rationalist
		}
		if = {
			limit = {
				has_civic = civic_ngm_formalist_rootkeeper
			}
			force_remove_civic = civic_ngm_formalist_rootkeeper
		}
		if = {
			limit = {
				has_civic = civic_ngm_artistically_inclined_careless_person
			}
			force_remove_civic = civic_ngm_artistically_inclined_careless_person
		}
		if = {
			limit = {
				has_civic = civic_ngm_steady_hand
			}
			force_remove_civic = civic_ngm_steady_hand
		}
		if = {
			limit = {
				has_civic = civic_ngm_the_toxic_survivalist
			}
			force_remove_civic = civic_ngm_the_toxic_survivalist
		}
		if = {
			limit = {
				has_civic = civic_ngm_hard_worker_with_a_slow_pace
			}
			force_remove_civic = civic_ngm_hard_worker_with_a_slow_pace
		}
		if = {
			limit = {
				has_civic = civic_ngm_ruthless_realist
			}
			force_remove_civic = civic_ngm_ruthless_realist
		}
		if = {
			limit = {
				has_civic = civic_ngm_smooth_traffic
			}
			force_remove_civic = civic_ngm_smooth_traffic
		}
		if = {
			limit = {
				has_civic = civic_ngm_ship_protection_protocol
			}
			force_remove_civic = civic_ngm_ship_protection_protocol
		}
		if = {
			limit = {
				has_civic = civic_ngm_space_security_headquarters
			}
			force_remove_civic = civic_ngm_space_security_headquarters
		}
		if = {
			limit = {
				has_civic = civic_ngm_random_birth_rate
			}
			force_remove_civic = civic_ngm_random_birth_rate
		}
		if = {
			limit = {
				has_civic = civic_ngm_trading_nations
			}
			force_remove_civic = civic_ngm_trading_nations
		}
		if = {
			limit = {
				has_civic = civic_ngm_virtual_society
			}
			force_remove_civic = civic_ngm_virtual_society
		}
		if = {
			limit = {
				has_civic = civic_ngm_healthy_habits
			}
			force_remove_civic = civic_ngm_healthy_habits
		}
		if = {
			limit = {
				has_civic = civic_ngm_cultural_hegemony
			}
			force_remove_civic = civic_ngm_cultural_hegemony
		}
		if = {
			limit = {
				has_civic = civic_ngm_federation_of_the_galaxies
			}
			force_remove_civic = civic_ngm_federation_of_the_galaxies
		}
		if = {
			limit = {
				has_civic = civic_ngm_environmental_democracy
			}
			force_remove_civic = civic_ngm_environmental_democracy
		}
		if = {
			limit = {
				has_civic = civic_ngm_religious_republicanism
			}
			force_remove_civic = civic_ngm_religious_republicanism
		}
		if = {
			limit = {
				has_civic = civic_ngm_peoples_democracy
			}
			force_remove_civic = civic_ngm_peoples_democracy
		}
		if = {
			limit = {
				has_civic = civic_ngm_cyberdemocracy
			}
			force_remove_civic = civic_ngm_cyberdemocracy
		}
		if = {
			limit = {
				has_civic = civic_ngm_aristocratic_republicanism
			}
			force_remove_civic = civic_ngm_aristocratic_republicanism
		}
		if = {
			limit = {
				has_civic = civic_ngm_chief_secretary_system
			}
			force_remove_civic = civic_ngm_chief_secretary_system
		}
		if = {
			limit = {
				has_civic = civic_ngm_war_lord
			}
			force_remove_civic = civic_ngm_war_lord
		}
		if = {
			limit = {
				has_civic = civic_ngm_communist_dictatorship
			}
			force_remove_civic = civic_ngm_communist_dictatorship
		}
		if = {
			limit = {
				has_civic = civic_ngm_demagoguery
			}
			force_remove_civic = civic_ngm_demagoguery
		}
		if = {
			limit = {
				has_civic = civic_ngm_order_of_chivalry
			}
			force_remove_civic = civic_ngm_order_of_chivalry
		}
		if = {
			limit = {
				has_civic = civic_ngm_honorary_imperialism
			}
			force_remove_civic = civic_ngm_honorary_imperialism
		}
		if = {
			limit = {
				has_civic = civic_ngm_guiding_principle
			}
			force_remove_civic = civic_ngm_guiding_principle
		}
		if = {
			limit = {
				has_civic = civic_ngm_party_rule
			}
			force_remove_civic = civic_ngm_party_rule
		}
		if = {
			limit = {
				has_civic = civic_ngm_freedom_in_obedience
			}
			force_remove_civic = civic_ngm_freedom_in_obedience
		}
		if = {
			limit = {
				has_civic = civic_ngm_caste_system
			}
			force_remove_civic = civic_ngm_caste_system
		}
		if = {
			limit = {
				has_civic = civic_ngm_tribalism
			}
			force_remove_civic = civic_ngm_tribalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_court_politics
			}
			force_remove_civic = civic_ngm_court_politics
		}
		if = {
			limit = {
				has_civic = civic_ngm_social_darvinism
			}
			force_remove_civic = civic_ngm_social_darvinism
		}
		if = {
			limit = {
				has_civic = civic_ngm_apprenticeship
			}
			force_remove_civic = civic_ngm_apprenticeship
		}
		if = {
			limit = {
				has_civic = civic_ngm_direct_democracy
			}
			force_remove_civic = civic_ngm_direct_democracy
		}
		if = {
			limit = {
				has_civic = civic_ngm_liberal_education
			}
			force_remove_civic = civic_ngm_liberal_education
		}
		if = {
			limit = {
				has_civic = civic_ngm_demonstration_culture
			}
			force_remove_civic = civic_ngm_demonstration_culture
		}
		if = {
			limit = {
				has_civic = civic_ngm_open_forum
			}
			force_remove_civic = civic_ngm_open_forum
		}
		if = {
			limit = {
				has_civic = civic_ngm_consumer_society
			}
			force_remove_civic = civic_ngm_consumer_society
		}
		if = {
			limit = {
				has_civic = civic_ngm_social_welfare
			}
			force_remove_civic = civic_ngm_social_welfare
		}
		if = {
			limit = {
				has_civic = civic_ngm_cosmic_scale_liberation
			}
			force_remove_civic = civic_ngm_cosmic_scale_liberation
		}
		if = {
			limit = {
				has_civic = civic_ngm_ultimate_freedom_of_thought
			}
			force_remove_civic = civic_ngm_ultimate_freedom_of_thought
		}
		if = {
			limit = {
				has_civic = civic_ngm_right_to_bear_arms
			}
			force_remove_civic = civic_ngm_right_to_bear_arms
		}
		if = {
			limit = {
				has_civic = civic_ngm_shared_values
			}
			force_remove_civic = civic_ngm_shared_values
		}
		if = {
			limit = {
				has_civic = civic_ngm_go_along_with
			}
			force_remove_civic = civic_ngm_go_along_with
		}
		if = {
			limit = {
				has_civic = civic_ngm_globalism
			}
			force_remove_civic = civic_ngm_globalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_multiculturalism
			}
			force_remove_civic = civic_ngm_multiculturalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_paternalism
			}
			force_remove_civic = civic_ngm_paternalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_accept_everyone
			}
			force_remove_civic = civic_ngm_accept_everyone
		}
		if = {
			limit = {
				has_civic = civic_ngm_people_flying_away
			}
			force_remove_civic = civic_ngm_people_flying_away
		}
		if = {
			limit = {
				has_civic = civic_ngm_exclusive_community
			}
			force_remove_civic = civic_ngm_exclusive_community
		}
		if = {
			limit = {
				has_civic = civic_ngm_remorseless_justice
			}
			force_remove_civic = civic_ngm_remorseless_justice
		}
		if = {
			limit = {
				has_civic = civic_ngm_disdain_for_others
			}
			force_remove_civic = civic_ngm_disdain_for_others
		}
		if = {
			limit = {
				has_civic = civic_ngm_gentlemanly_disgust
			}
			force_remove_civic = civic_ngm_gentlemanly_disgust
		}
		if = {
			limit = {
				has_civic = civic_ngm_erasure
			}
			force_remove_civic = civic_ngm_erasure
		}
		if = {
			limit = {
				has_civic = civic_ngm_dissection
			}
			force_remove_civic = civic_ngm_dissection
		}
		if = {
			limit = {
				has_civic = civic_ngm_imperialism
			}
			force_remove_civic = civic_ngm_imperialism
		}
		if = {
			limit = {
				has_civic = civic_ngm_big_ship_policy
			}
			force_remove_civic = civic_ngm_big_ship_policy
		}
		if = {
			limit = {
				has_civic = civic_ngm_military_industrial_complex
			}
			force_remove_civic = civic_ngm_military_industrial_complex
		}
		if = {
			limit = {
				has_civic = civic_ngm_war_prosperity
			}
			force_remove_civic = civic_ngm_war_prosperity
		}
		if = {
			limit = {
				has_civic = civic_ngm_military_regime
			}
			force_remove_civic = civic_ngm_military_regime
		}
		if = {
			limit = {
				has_civic = civic_ngm_The_Struggle_for_Struggle
			}
			force_remove_civic = civic_ngm_The_Struggle_for_Struggle
		}
		if = {
			limit = {
				has_civic = civic_ngm_aegis_shield
			}
			force_remove_civic = civic_ngm_aegis_shield
		}
		if = {
			limit = {
				has_civic = civic_ngm_prosperity_advocate
			}
			force_remove_civic = civic_ngm_prosperity_advocate
		}
		if = {
			limit = {
				has_civic = civic_ngm_armed_pacifism
			}
			force_remove_civic = civic_ngm_armed_pacifism
		}
		if = {
			limit = {
				has_civic = civic_ngm_active_pacifist
			}
			force_remove_civic = civic_ngm_active_pacifist
		}
		if = {
			limit = {
				has_civic = civic_ngm_messenger_of_peace
			}
			force_remove_civic = civic_ngm_messenger_of_peace
		}
		if = {
			limit = {
				has_civic = civic_ngm_good_faith_negotiator
			}
			force_remove_civic = civic_ngm_good_faith_negotiator
		}
		if = {
			limit = {
				has_civic = civic_ngm_mechanical_faith
			}
			force_remove_civic = civic_ngm_mechanical_faith
		}
		if = {
			limit = {
				has_civic = civic_ngm_missionary_group
			}
			force_remove_civic = civic_ngm_missionary_group
		}
		if = {
			limit = {
				has_civic = civic_ngm_defender_of_the_faith
			}
			force_remove_civic = civic_ngm_defender_of_the_faith
		}
		if = {
			limit = {
				has_civic = civic_ngm_divination
			}
			force_remove_civic = civic_ngm_divination
		}
		if = {
			limit = {
				has_civic = civic_ngm_cultural_consumption
			}
			force_remove_civic = civic_ngm_cultural_consumption
		}
		if = {
			limit = {
				has_civic = civic_ngm_ai_assistance
			}
			force_remove_civic = civic_ngm_ai_assistance
		}
		if = {
			limit = {
				has_civic = civic_ngm_machines_are_our_friends
			}
			force_remove_civic = civic_ngm_machines_are_our_friends
		}
		if = {
			limit = {
				has_civic = civic_ngm_longing_for_the_future
			}
			force_remove_civic = civic_ngm_longing_for_the_future
		}
		if = {
			limit = {
				has_civic = civic_ngm_experimental_substance
			}
			force_remove_civic = civic_ngm_experimental_substance
		}
		if = {
			limit = {
				has_civic = civic_ngm_industrial_capitalism
			}
			force_remove_civic = civic_ngm_industrial_capitalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_experimental_practice
			}
			force_remove_civic = civic_ngm_experimental_practice
		}
		if = {
			limit = {
				has_civic = civic_ngm_paranoia
			}
			force_remove_civic = civic_ngm_paranoia
		}
		if = {
			limit = {
				has_civic = civic_ngm_equality_in_society
			}
			force_remove_civic = civic_ngm_equality_in_society
		}
		if = {
			limit = {
				has_civic = civic_ngm_sectionalism
			}
			force_remove_civic = civic_ngm_sectionalism
		}
		if = {
			limit = {
				has_civic = civic_ngm_peoples_army
			}
			force_remove_civic = civic_ngm_peoples_army
		}
		if = {
			limit = {
				has_civic = civic_ngm_economic_primitivism
			}
			force_remove_civic = civic_ngm_economic_primitivism
		}
		if = {
			limit = {
				has_civic = civic_ngm_land_sharing
			}
			force_remove_civic = civic_ngm_land_sharing
		}
		if = {
			limit = {
				has_civic = civic_ngm_communism
			}
			force_remove_civic = civic_ngm_communism
		}
		if = {
			limit = {
				has_civic = civic_ngm_development_dictatorship
			}
			force_remove_civic = civic_ngm_development_dictatorship
		}
		if = {
			limit = {
				has_civic = civic_ngm_commercialism
			}
			force_remove_civic = civic_ngm_commercialism
		}
		if = {
			limit = {
				has_civic = civic_ngm_financing
			}
			force_remove_civic = civic_ngm_financing
		}
		if = {
			limit = {
				has_civic = civic_ngm_information
			}
			force_remove_civic = civic_ngm_information
		}
		if = {
			limit = {
				has_civic = civic_ngm_agriculture
			}
			force_remove_civic = civic_ngm_agriculture
		}
		if = {
			limit = {
				has_civic = civic_ngm_deregulation
			}
			force_remove_civic = civic_ngm_deregulation
		}
		if = {
			limit = {
				has_civic = civic_ngm_CIA
			}
			force_remove_civic = civic_ngm_CIA
		}
		if = {
			limit = {
				has_civic = civic_ngm_information_operation
			}
			force_remove_civic = civic_ngm_information_operation
		}
		if = {
			limit = {
				has_civic = civic_ngm_cryptography
			}
			force_remove_civic = civic_ngm_cryptography
		}
		if = {
			limit = {
				has_civic = civic_ngm_parabola
			}
			force_remove_civic = civic_ngm_parabola
		}
		if = {
			limit = {
				has_civic = civic_ngm_smile
			}
			force_remove_civic = civic_ngm_smile
		}
		if = {
			limit = {
				has_civic = civic_ngm_mastermind
			}
			force_remove_civic = civic_ngm_mastermind
		}
		if = {
			limit = {
				has_civic = civic_ngm_glorious_isolation
			}
			force_remove_civic = civic_ngm_glorious_isolation
		}
		if = {
			limit = {
				has_civic = civic_ngm_FBI
			}
			force_remove_civic = civic_ngm_FBI
		}
		if = {
			limit = {
				has_civic = civic_ngm_internal_affairs
			}
			force_remove_civic = civic_ngm_internal_affairs
		}
		if = {
			limit = {
				has_civic = civic_ngm_inner_satisfaction
			}
			force_remove_civic = civic_ngm_inner_satisfaction
		}
		if = {
			limit = {
				has_civic = civic_ngm_armed_neutrality
			}
			force_remove_civic = civic_ngm_armed_neutrality
		}
		if = {
			limit = {
				has_civic = civic_ngm_interest_representation
			}
			force_remove_civic = civic_ngm_interest_representation
		}
		if = {
			limit = {
				has_civic = civic_ngm_environmental_maintenance
			}
			force_remove_civic = civic_ngm_environmental_maintenance
		}
		if = {
			limit = {
				has_civic = civic_ngm_pest_control
			}
			force_remove_civic = civic_ngm_pest_control
		}
		if = {
			limit = {
				has_civic = civic_ngm_natural_adaptation
			}
			force_remove_civic = civic_ngm_natural_adaptation
		}
		if = {
			limit = {
				has_civic = civic_ngm_planetary_garden
			}
			force_remove_civic = civic_ngm_planetary_garden
		}
		if = {
			limit = {
				has_civic = civic_ngm_breakdown_prevention_method
			}
			force_remove_civic = civic_ngm_breakdown_prevention_method
		}
		if = {
			limit = {
				has_civic = civic_ngm_nature_faith
			}
			force_remove_civic = civic_ngm_nature_faith
		}
		if = {
			limit = {
				has_civic = civic_ngm_grand_monument
			}
			force_remove_civic = civic_ngm_grand_monument
		}
		if = {
			limit = {
				has_civic = civic_ngm_destructive_digging
			}
			force_remove_civic = civic_ngm_destructive_digging
		}
		if = {
			limit = {
				has_civic = civic_ngm_irreversible_industrialization
			}
			force_remove_civic = civic_ngm_irreversible_industrialization
		}
		if = {
			limit = {
				has_civic = civic_ngm_infrastructure_construction
			}
			force_remove_civic = civic_ngm_infrastructure_construction
		}
		if = {
			limit = {
				has_civic = civic_ngm_nationwide_development
			}
			force_remove_civic = civic_ngm_nationwide_development
		}
		if = {
			limit = {
				has_civic = civic_ngm_planetary_scale_irrigation
			}
			force_remove_civic = civic_ngm_planetary_scale_irrigation
		}
		if = {
			limit = {
				has_civic = civic_ngm_modification_engineering
			}
			force_remove_civic = civic_ngm_modification_engineering
		}
		if = {
			limit = {
				has_civic = civic_ngm_diplomatic_etiquette
			}
			force_remove_civic = civic_ngm_diplomatic_etiquette
		}
		if = {
			limit = {
				has_civic = civic_ngm_exchange_of_honor
			}
			force_remove_civic = civic_ngm_exchange_of_honor
		}
		if = {
			limit = {
				has_civic = civic_ngm_heroic_volunteer_force
			}
			force_remove_civic = civic_ngm_heroic_volunteer_force
		}
		if = {
			limit = {
				has_civic = civic_ngm_the_self_righteous_hero
			}
			force_remove_civic = civic_ngm_the_self_righteous_hero
		}
		if = {
			limit = {
				has_civic = civic_ngm_respect_act
			}
			force_remove_civic = civic_ngm_respect_act
		}
		if = {
			limit = {
				has_civic = civic_ngm_personal_interest
			}
			force_remove_civic = civic_ngm_personal_interest
		}
		if = {
			limit = {
				has_civic = civic_ngm_hypothecation_of_human_rights
			}
			force_remove_civic = civic_ngm_hypothecation_of_human_rights
		}
		if = {
			limit = {
				has_civic = civic_ngm_money_penalty
			}
			force_remove_civic = civic_ngm_money_penalty
		}
		if = {
			limit = {
				has_civic = civic_ngm_profit_motive
			}
			force_remove_civic = civic_ngm_profit_motive
		}
		if = {
			limit = {
				has_civic = civic_ngm_securing_real_benefits
			}
			force_remove_civic = civic_ngm_securing_real_benefits
		}
		if = {
			limit = {
				has_civic = civic_ngm_producer_consumer_society
			}
			force_remove_civic = civic_ngm_producer_consumer_society
		}
		if = {
			limit = {
				has_civic = civic_ngm_corporate_empire
			}
			force_remove_civic = civic_ngm_corporate_empire
		}
		if = {
			limit = {
				has_civic = civic_ngm_high_tech_company
			}
			force_remove_civic = civic_ngm_high_tech_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_smokestack_industry
			}
			force_remove_civic = civic_ngm_smokestack_industry
		}
		if = {
			limit = {
				has_civic = civic_ngm_hereditary_officers
			}
			force_remove_civic = civic_ngm_hereditary_officers
		}
		# if = {
		# 	limit = {
		# 		has_civic = civic_ngm_zaibatsu
		# 	}
		# 	force_remove_civic = civic_ngm_zaibatsu
		# }
		if = {
			limit = {
				has_civic = civic_ngm_financial_enterprises
			}
			force_remove_civic = civic_ngm_financial_enterprises
		}
		if = {
			limit = {
				has_civic = civic_ngm_information_company
			}
			force_remove_civic = civic_ngm_information_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_social_enterprise
			}
			force_remove_civic = civic_ngm_social_enterprise
		}
		if = {
			limit = {
				has_civic = civic_ngm_general_contractor
			}
			force_remove_civic = civic_ngm_general_contractor
		}
		if = {
			limit = {
				has_civic = civic_ngm_agricultural_company
			}
			force_remove_civic = civic_ngm_agricultural_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_shipping_company
			}
			force_remove_civic = civic_ngm_shipping_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_operating_company
			}
			force_remove_civic = civic_ngm_operating_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_industrial_espionage
			}
			force_remove_civic = civic_ngm_industrial_espionage
		}
		if = {
			limit = {
				has_civic = civic_ngm_rating_company
			}
			force_remove_civic = civic_ngm_rating_company
		}
		if = {
			limit = {
				has_civic = civic_ngm_underhanded_trick
			}
			force_remove_civic = civic_ngm_underhanded_trick
		}
	}
}

# 狙い撃ち:艦船連射レート+5%、宿敵の犯罪度+10		伝統取得時
country_event = {
	id = ngm_tradition.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_sniper
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_1
					has_country_flag = country_flag_tr_ngm_sniper_debuff_1
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_1
			set_country_flag = country_flag_tr_ngm_sniper_debuff_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_2
					has_country_flag = country_flag_tr_ngm_sniper_debuff_2
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_2
			set_country_flag = country_flag_tr_ngm_sniper_debuff_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_3
					has_country_flag = country_flag_tr_ngm_sniper_debuff_3
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_3
			set_country_flag = country_flag_tr_ngm_sniper_debuff_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_4
					has_country_flag = country_flag_tr_ngm_sniper_debuff_4
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_4
			set_country_flag = country_flag_tr_ngm_sniper_debuff_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_5
					has_country_flag = country_flag_tr_ngm_sniper_debuff_5
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_5
			set_country_flag = country_flag_tr_ngm_sniper_debuff_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_6
					has_country_flag = country_flag_tr_ngm_sniper_debuff_6
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_6
			set_country_flag = country_flag_tr_ngm_sniper_debuff_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_7
					has_country_flag = country_flag_tr_ngm_sniper_debuff_7
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_7
			set_country_flag = country_flag_tr_ngm_sniper_debuff_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sniper_debuff_8
					has_country_flag = country_flag_tr_ngm_sniper_debuff_8
				}
			}
			set_global_flag = global_flag_tr_ngm_sniper_debuff_8
			set_country_flag = country_flag_tr_ngm_sniper_debuff_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_8
				}
			}
		}
	}
}

# 狙い撃ち:艦船連射レート+5%、宿敵の犯罪度+10		月ごとのチェック
country_event = {
	id = ngm_tradition.6
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_sniper
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_1
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_1
				}
				remove_modifier = tr_ngm_sniper_debuff_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_2
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_2
				}
				remove_modifier = tr_ngm_sniper_debuff_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_3
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_3
				}
				remove_modifier = tr_ngm_sniper_debuff_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_4
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_4
				}
				remove_modifier = tr_ngm_sniper_debuff_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_5
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_5
				}
				remove_modifier = tr_ngm_sniper_debuff_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_6
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_6
				}
				remove_modifier = tr_ngm_sniper_debuff_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_7
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_7
				}
				remove_modifier = tr_ngm_sniper_debuff_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sniper_debuff_8
			}
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sniper_debuff_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sniper_debuff_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sniper_debuff_8
				}
				remove_modifier = tr_ngm_sniper_debuff_8
			}
		}
	}
}

# 浸透:外交関係にあるすべての国家の犯罪度+20		伝統取得時
country_event = {
	id = ngm_tradition.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_penetration
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_1
					has_country_flag = country_flag_tr_ngm_penetration_debuff_1
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_1
			set_country_flag = country_flag_tr_ngm_penetration_debuff_1
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_2
					has_country_flag = country_flag_tr_ngm_penetration_debuff_2
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_2
			set_country_flag = country_flag_tr_ngm_penetration_debuff_2
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_3
					has_country_flag = country_flag_tr_ngm_penetration_debuff_3
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_3
			set_country_flag = country_flag_tr_ngm_penetration_debuff_3
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_4
					has_country_flag = country_flag_tr_ngm_penetration_debuff_4
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_4
			set_country_flag = country_flag_tr_ngm_penetration_debuff_4
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_5
					has_country_flag = country_flag_tr_ngm_penetration_debuff_5
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_5
			set_country_flag = country_flag_tr_ngm_penetration_debuff_5
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_6
					has_country_flag = country_flag_tr_ngm_penetration_debuff_6
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_6
			set_country_flag = country_flag_tr_ngm_penetration_debuff_6
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_7
					has_country_flag = country_flag_tr_ngm_penetration_debuff_7
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_7
			set_country_flag = country_flag_tr_ngm_penetration_debuff_7
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_penetration_debuff_8
					has_country_flag = country_flag_tr_ngm_penetration_debuff_8
				}
			}
			set_global_flag = global_flag_tr_ngm_penetration_debuff_8
			set_country_flag = country_flag_tr_ngm_penetration_debuff_8
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_8
				}
			}
		}
	}
}

# 浸透:解読度+5、外交関係にあるすべての国家の犯罪度+5		月ごとのチェック
country_event = {
	id = ngm_tradition.8
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_penetration
	}
	immediate = {
		every_playable_country = {
			limit = {
				has_ascension_perk = ap_ngm_ministry_of_innocence
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_1
				}
				remove_modifier = tr_ngm_penetration_debuff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_2
				}
				remove_modifier = tr_ngm_penetration_debuff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_3
				}
				remove_modifier = tr_ngm_penetration_debuff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_4
				}
				remove_modifier = tr_ngm_penetration_debuff_4
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_5
				}
				remove_modifier = tr_ngm_penetration_debuff_5
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_6
				}
				remove_modifier = tr_ngm_penetration_debuff_6
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_7
				}
				remove_modifier = tr_ngm_penetration_debuff_7
			}
			if = {
				limit = {
					has_modifier = tr_ngm_penetration_debuff_8
				}
				remove_modifier = tr_ngm_penetration_debuff_8
			}
		}
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_1
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_1
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_2
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_2
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_3
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_3
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_4
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_4
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_5
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_5
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_6
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_6
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_7
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_7
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_penetration_debuff_8
			}
			every_playable_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						is_same_value = root
					}
					has_established_contact = root
					NOT = {
						has_modifier = tr_ngm_penetration_debuff_8
					}
				}
				add_modifier = {
					modifier = tr_ngm_penetration_debuff_8
				}
			}
		}
	}
}

# 自由:完遂時:宿敵宣言した国家の奴隷幸福度-20%		伝統取得時
country_event = {
	id = ngm_tradition.9
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_freedom_finish
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_1
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_1
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_1
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_2
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_2
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_2
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_3
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_3
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_3
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_4
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_4
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_4
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_5
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_5
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_5
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_6
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_6
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_6
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_7
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_7
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_7
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_freedom_finish_debuff_8
					has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_8
				}
			}
			set_global_flag = global_flag_tr_ngm_freedom_finish_debuff_8
			set_country_flag = country_flag_tr_ngm_freedom_finish_debuff_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_8
				}
			}
		}
	}
}

# 自由:完遂時:宿敵宣言した国家の奴隷幸福度-20%		月ごとのチェック
country_event = {
	id = ngm_tradition.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_freedom_finish
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_1
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_1
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_1
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_2
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_2
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_2
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_3
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_3
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_3
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_4
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_4
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_4
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_5
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_5
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_5
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_6
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_6
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_6
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_7
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_7
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_7
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_freedom_finish_debuff_8
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_freedom_finish_debuff_8
					}
				}
				add_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_freedom_finish_debuff_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_freedom_finish_debuff_8
				}
				remove_modifier = tr_ngm_freedom_finish_debuff_8
			}
		}
	}
}

# 破壊工作:宿敵の貿易保護値-15、宿敵の犯罪度+20		伝統取得時
country_event = {
	id = ngm_tradition.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_sabotage
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_1
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_1
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_1
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_2
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_2
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_2
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_3
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_3
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_3
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_4
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_4
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_4
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_5
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_5
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_5
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_6
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_6
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_6
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_7
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_7
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_7
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_sabotage_debuff_8
					has_country_flag = country_flag_tr_ngm_sabotage_debuff_8
				}
			}
			set_global_flag = global_flag_tr_ngm_sabotage_debuff_8
			set_country_flag = country_flag_tr_ngm_sabotage_debuff_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_8
				}
			}
		}
	}
}

# 破壊工作:宿敵の貿易保護値-15、宿敵の犯罪度+20		月ごとのチェック
country_event = {
	id = ngm_tradition.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_sabotage
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_1
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_1
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_1
				}
				remove_modifier = tr_ngm_sabotage_debuff_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_2
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_2
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_2
				}
				remove_modifier = tr_ngm_sabotage_debuff_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_3
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_3
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_3
				}
				remove_modifier = tr_ngm_sabotage_debuff_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_4
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_4
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_4
				}
				remove_modifier = tr_ngm_sabotage_debuff_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_5
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_5
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_5
				}
				remove_modifier = tr_ngm_sabotage_debuff_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_6
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_6
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_6
				}
				remove_modifier = tr_ngm_sabotage_debuff_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_7
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_7
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_7
				}
				remove_modifier = tr_ngm_sabotage_debuff_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_sabotage_debuff_8
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_sabotage_debuff_8
					}
				}
				add_modifier = {
					modifier = tr_ngm_sabotage_debuff_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_sabotage_debuff_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_sabotage_debuff_8
				}
				remove_modifier = tr_ngm_sabotage_debuff_8
			}
		}
	}
}

# 恒常的妨害:宿敵の貿易保護値-5		伝統取得時
country_event = {
	id = ngm_tradition.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_constant_obstruction
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_1
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_1
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_1
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_2
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_2
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_2
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_3
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_3
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_3
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_4
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_4
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_4
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_5
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_5
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_5
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_6
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_6
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_6
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_7
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_7
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_7
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_8
					has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_8
				}
			}
			set_global_flag = global_flag_tr_ngm_constant_obstruction_debuff_8
			set_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_8
				}
			}
		}
	}
}

# 恒常的妨害:宿敵の貿易保護値-5		月ごとのチェック
country_event = {
	id = ngm_tradition.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_constant_obstruction
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_1
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_1
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_1
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_2
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_2
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_2
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_3
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_3
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_3
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_4
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_4
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_4
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_5
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_5
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_5
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_6
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_6
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_6
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_7
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_7
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_7
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_constant_obstruction_debuff_8
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_constant_obstruction_debuff_8
					}
				}
				add_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_constant_obstruction_debuff_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_constant_obstruction_debuff_8
				}
				remove_modifier = tr_ngm_constant_obstruction_debuff_8
			}
		}
	}
}

# 国家宣伝省:宿敵1つあたりの影響力収入+1		伝統取得時
country_event = {
	id = ngm_tradition.13
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_ministry_engagement
	}
	immediate = {
		if = {
			limit = {
				num_rivals = 1
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_1
			}
		}
		else_if = {
			limit = {
				num_rivals = 2
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_2
			}
		}
		else_if = {
			limit = {
				num_rivals = 3
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_3
			}
		}
		else_if = {
			limit = {
				num_rivals = 4
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_4
			}
		}
		else_if = {
			limit = {
				num_rivals = 5
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_5
			}
		}
	}
}

# 国家宣伝省:宿敵1つあたりの影響力収入+1		月ごとのチェック
country_event = {
	id = ngm_tradition.14
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_ministry_engagement
	}
	immediate = {
		if = {
			limit = {
				num_rivals = 1
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_2
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_3
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_4
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_4
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_5
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_5
			}
		}
		else_if = {
			limit = {
				num_rivals = 2
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_1
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_3
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_4
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_4
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_5
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_5
			}
		}
		else_if = {
			limit = {
				num_rivals = 3
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_1
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_2
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_4
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_4
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_5
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_5
			}
		}
		else_if = {
			limit = {
				num_rivals = 4
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_4
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_1
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_2
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_3
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_5
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_5
			}
		}
		else_if = {
			limit = {
				num_rivals = 5
			}
			add_modifier = {
				modifier = tr_ngm_ministry_engagement_buff_5
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_1
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_1
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_2
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_2
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_3
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_3
			}
			if = {
				limit = {
					has_modifier = tr_ngm_ministry_engagement_buff_4
				}
				remove_modifier = tr_ngm_ministry_engagement_buff_4
			}
		}
	}
}

# 善隣完遂時:5種類以上の種族がいる惑星でPop成長速度+10%、交易価値+10%、統合力+10%、流入魅力+10%		伝統取得時
country_event = {
	id = ngm_tradition.15
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_neighbor_finish
	}
	immediate = {
		every_owned_planet = {
			limit = {
				num_species >= 5
			}
			add_modifier = {
				modifier = tr_ngm_neighbor_finish_buff
			}
		}
	}
}

# 善隣完遂時:5種類以上の種族がいる惑星でPop成長速度+10%、交易価値+10%、統合力+10%、流入魅力+10%		月ごとのチェック
country_event = {
	id = ngm_tradition.16
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_ministry_engagement
	}
	immediate = {
		every_owned_planet = {
			limit = {
				num_species >= 5
				NOT = {
					has_modifier = tr_ngm_neighbor_finish_buff
				}
			}
			add_modifier = {
				modifier = tr_ngm_neighbor_finish_buff
			}
		}
	}
}

# 憲兵隊:地上軍のいる惑星の安定度+20		伝統取得時
country_event = {
	id = ngm_tradition.17
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_military_police
	}
	immediate = {
		every_owned_planet = {
			limit = {
				num_armies >= 5
			}
			add_modifier = {
				modifier = tr_ngm_military_police_buff
			}
		}
	}
}

# 憲兵隊:地上軍のいる惑星の安定度+20		月ごとのチェック
country_event = {
	id = ngm_tradition.18
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_military_police
	}
	immediate = {
		every_owned_planet = {
			limit = {
				num_armies >= 10
				NOT = {
					has_modifier = tr_ngm_military_police_buff
				}
			}
			add_modifier = {
				modifier = tr_ngm_military_police_buff
			}
		}
		every_owned_planet = {
			limit = {
				num_armies < 10
				has_modifier = tr_ngm_military_police_buff
			}
			remove_modifier = tr_ngm_military_police_buff
		}
	}
}

# 余裕取得時：管理許容量を超過しているとき、外交発言力+30%		伝統取得時
country_event = {
	id = ngm_tradition.19
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_margin_adopt
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_margin_adopt_buff
			}
		}
	}
}

# 余裕取得時：管理許容量を超過しているとき、外交発言力+30%		月ごとのチェック
country_event = {
	id = ngm_tradition.20
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_margin_adopt
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_margin_adopt_buff
			}
		}
		else = {
			remove_modifier = tr_ngm_margin_adopt_buff
		}
	}
}

# 余裕完遂時:管理許容量を超過しているとき、影響力+30%		伝統取得時
country_event = {
	id = ngm_tradition.21
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_margin_finish
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_margin_finish_buff
			}
		}
	}
}

# 余裕完遂時:管理許容量を超過しているとき、影響力+30%		月ごとのチェック
country_event = {
	id = ngm_tradition.22
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_margin_finish
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_margin_finish_buff
			}
		}
		else = {
			remove_modifier = tr_ngm_margin_finish_buff
		}
	}
}

# 3.軍事国家:宇宙軍許容量を超過しているときに職業による資源+5%		伝統取得時
country_event = {
	id = ngm_tradition.23
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_weapons_arsenal_country
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_weapons_arsenal_country_buff
			}
		}
	}
}

# 3.軍事国家:宇宙軍許容量を超過しているときに職業による資源+5%		月ごとのチェック
country_event = {
	id = ngm_tradition.24
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_weapons_arsenal_country
	}
	immediate = {
		if = {
			limit = {
				empire_sprawl_over_cap > 0
			}
			add_modifier = {
				modifier = tr_ngm_weapons_arsenal_country_buff
			}
		}
		else = {
			remove_modifier = tr_ngm_weapons_arsenal_country_buff
		}
	}
}

# ②恒常的敵対諜報活動		宿敵にした相手国の影響力-1
country_event = {
	id = ngm_tradition.25
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_constant_hostile_intelligence_operations
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_1
					has_country_flag = country_flag_ap_ngm_chio_debuff_1
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_1
			set_country_flag = country_flag_ap_ngm_chio_debuff_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_2
					has_country_flag = country_flag_ap_ngm_chio_debuff_2
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_2
			set_country_flag = country_flag_ap_ngm_chio_debuff_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_3
					has_country_flag = country_flag_ap_ngm_chio_debuff_3
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_3
			set_country_flag = country_flag_ap_ngm_chio_debuff_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_4
					has_country_flag = country_flag_ap_ngm_chio_debuff_4
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_4
			set_country_flag = country_flag_ap_ngm_chio_debuff_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_5
					has_country_flag = country_flag_ap_ngm_chio_debuff_5
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_5
			set_country_flag = country_flag_ap_ngm_chio_debuff_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_6
					has_country_flag = country_flag_ap_ngm_chio_debuff_6
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_6
			set_country_flag = country_flag_ap_ngm_chio_debuff_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_7
					has_country_flag = country_flag_ap_ngm_chio_debuff_7
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_7
			set_country_flag = country_flag_ap_ngm_chio_debuff_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_ap_ngm_chio_debuff_8
					has_country_flag = country_flag_ap_ngm_chio_debuff_8
				}
			}
			set_global_flag = global_flag_ap_ngm_chio_debuff_8
			set_country_flag = country_flag_ap_ngm_chio_debuff_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_8
				}
			}
		}
	}
}

# ②恒常的敵対諜報活動		宿敵にした相手国の影響力-1		月ごとのチェック
country_event = {
	id = ngm_tradition.26
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_constant_hostile_intelligence_operations
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_1
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_1
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_1
				}
				remove_modifier = ap_ngm_chio_debuff_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_2
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_2
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_2
				}
				remove_modifier = ap_ngm_chio_debuff_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_3
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_3
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_3
				}
				remove_modifier = ap_ngm_chio_debuff_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_4
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_4
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_4
				}
				remove_modifier = ap_ngm_chio_debuff_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_5
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_5
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_5
				}
				remove_modifier = ap_ngm_chio_debuff_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_6
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_6
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_6
				}
				remove_modifier = ap_ngm_chio_debuff_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_7
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_7
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_7
				}
				remove_modifier = ap_ngm_chio_debuff_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_ap_ngm_chio_debuff_8
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = ap_ngm_chio_debuff_8
					}
				}
				add_modifier = {
					modifier = ap_ngm_chio_debuff_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = ap_ngm_chio_debuff_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = ap_ngm_chio_debuff_8
				}
				remove_modifier = ap_ngm_chio_debuff_8
			}
		}
	}
}

# 宗主取得時:忠誠度月間+1		伝統取得時
country_event = {
	id = ngm_tradition.27
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_suzerain_adopt
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
			}
			add_modifier = {
				modifier = tr_ngm_suzerain_adopt_modifier
			}
		}
	}
}

# 宗主取得時:忠誠度月間+1		月ごとチェック
country_event = {
	id = ngm_tradition.28
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_suzerain_adopt
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_modifier = tr_ngm_suzerain_adopt_modifier
				}
			}
			add_modifier = {
				modifier = tr_ngm_suzerain_adopt_modifier
			}
		}
	}
}

# 宗主取得時:忠誠度月間+1		解除月ごとチェック
country_event = {
	id = ngm_tradition.29
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			is_subject = no
			has_ascension_perk = ap_ngm_ministry_of_innocence
		}
		OR = {
			has_modifier = tr_ngm_suzerain_adopt_modifier
			has_modifier = tr_ngm_suzerainty_pressure_modifier
			has_modifier = tr_ngm_ministory_culture_modifier
			has_modifier = civic_ngm_missionary_group_modifier
			has_modifier = ap_ngm_dipromatic_think_tank_modifier
			has_modifier = ap_ngm_layer_countries_modifier
		}
	}
	immediate = {
		if = {
			limit = {
				has_modifier = tr_ngm_suzerain_adopt_modifier
			}
			remove_modifier = tr_ngm_suzerain_adopt_modifier
		}
		if = {
			limit = {
				has_modifier = tr_ngm_suzerainty_pressure_modifier
			}
			remove_modifier = tr_ngm_suzerainty_pressure_modifier
		}
		if = {
			limit = {
				has_modifier = tr_ngm_ministory_culture_modifier
			}
			remove_modifier = tr_ngm_ministory_culture_modifier
		}
		if = {
			limit = {
				has_modifier = civic_ngm_missionary_group_modifier
			}
			remove_modifier = civic_ngm_missionary_group_modifier
		}
		if = {
			limit = {
				has_modifier = ap_ngm_dipromatic_think_tank_modifier
			}
			remove_modifier = ap_ngm_dipromatic_think_tank_modifier
		}
		if = {
			limit = {
				has_modifier = ap_ngm_layer_countries_modifier
			}
			remove_modifier = ap_ngm_layer_countries_modifier
		}
	}
}

# 宗主国の圧力:忠誠度月間+1		伝統取得時
country_event = {
	id = ngm_tradition.30
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_suzerainty_pressure
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
			}
			add_modifier = {
				modifier = tr_ngm_suzerainty_pressure_modifier
			}
		}
	}
}

# 宗主国の圧力:忠誠度月間+1		月ごとチェック
country_event = {
	id = ngm_tradition.31
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_suzerainty_pressure
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_modifier = tr_ngm_suzerainty_pressure_modifier
				}
			}
			add_modifier = {
				modifier = tr_ngm_suzerainty_pressure_modifier
			}
		}
	}
}

# 40.文化大臣の設置:月間忠誠度+1	伝統取得時
country_event = {
	id = ngm_tradition.32
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_ministory_culture
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
			}
			add_modifier = {
				modifier = tr_ngm_ministory_culture_modifier
			}
		}
	}
}

# 40.文化大臣の設置:月間忠誠度+1		月ごとチェック
country_event = {
	id = ngm_tradition.33
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_ministory_culture
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_modifier = tr_ngm_ministory_culture_modifier
				}
			}
			add_modifier = {
				modifier = tr_ngm_ministory_culture_modifier
			}
		}
	}
}

# 84.敵対的演説:宿敵の外交発言力-10%
country_event = {
	id = ngm_tradition.34
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_battle_speach
	}
	immediate = {
		if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_1
					has_country_flag = country_flag_tr_ngm_battle_speach_1
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_1
			set_country_flag = country_flag_tr_ngm_battle_speach_1
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_1
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_2
					has_country_flag = country_flag_tr_ngm_battle_speach_2
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_2
			set_country_flag = country_flag_tr_ngm_battle_speach_2
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_2
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_3
					has_country_flag = country_flag_tr_ngm_battle_speach_3
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_3
			set_country_flag = country_flag_tr_ngm_battle_speach_3
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_3
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_4
					has_country_flag = country_flag_tr_ngm_battle_speach_4
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_4
			set_country_flag = country_flag_tr_ngm_battle_speach_4
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_4
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_5
					has_country_flag = country_flag_tr_ngm_battle_speach_5
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_5
			set_country_flag = country_flag_tr_ngm_battle_speach_5
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_5
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_6
					has_country_flag = country_flag_tr_ngm_battle_speach_6
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_6
			set_country_flag = country_flag_tr_ngm_battle_speach_6
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_6
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_7
					has_country_flag = country_flag_tr_ngm_battle_speach_7
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_7
			set_country_flag = country_flag_tr_ngm_battle_speach_7
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_7
				}
			}
		}
		else_if = {
			limit = {
				NOR = {
					has_global_flag = global_flag_tr_ngm_battle_speach_8
					has_country_flag = country_flag_tr_ngm_battle_speach_8
				}
			}
			set_global_flag = global_flag_tr_ngm_battle_speach_8
			set_country_flag = country_flag_tr_ngm_battle_speach_8
			every_rival_country = {
				limit = {
					NOT = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_8
				}
			}
		}
	}
}

# 84.敵対的演説:宿敵の外交発言力-10%		月ごとのチェック
country_event = {
	id = ngm_tradition.35
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_tradition = tr_ngm_battle_speach
	}
	immediate = {
		if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_1
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_1
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_1
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_1
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_1
				}
				remove_modifier = tr_ngm_battle_speach_modifier_1
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_2
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_2
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_2
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_2
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_2
				}
				remove_modifier = tr_ngm_battle_speach_modifier_2
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_3
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_3
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_3
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_3
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_3
				}
				remove_modifier = tr_ngm_battle_speach_modifier_3
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_4
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_4
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_4
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_4
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_4
				}
				remove_modifier = tr_ngm_battle_speach_modifier_4
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_5
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_5
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_5
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_5
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_5
				}
				remove_modifier = tr_ngm_battle_speach_modifier_5
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_6
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_6
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_6
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_6
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_6
				}
				remove_modifier = tr_ngm_battle_speach_modifier_6
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_7
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_7
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_7
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_7
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_7
				}
				remove_modifier = tr_ngm_battle_speach_modifier_7
			}
		}
		else_if = {
			limit = {
				has_country_flag = country_flag_tr_ngm_battle_speach_8
			}
			every_rival_country = {
				limit = {
					NOR = {
						has_ascension_perk = ap_ngm_ministry_of_innocence
						has_modifier = tr_ngm_battle_speach_modifier_8
					}
				}
				add_modifier = {
					modifier = tr_ngm_battle_speach_modifier_8
				}
			}
			every_rival_country = {
				limit = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
				remove_modifier = {
					modifier = tr_ngm_battle_speach_modifier_8
				}
			}
			every_playable_country = {
				limit = {
					NOT = {
						is_rival = root
					}
					has_modifier = tr_ngm_battle_speach_modifier_8
				}
				remove_modifier = tr_ngm_battle_speach_modifier_8
			}
		}
	}
}

# 2.外交シンクタンク	外交官+2 外交発言力+20% 月間忠誠度+1
country_event = {
	id = ngm_tradition.36
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_dipromatic_think_tank
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
			}
			add_modifier = {
				modifier = ap_ngm_dipromatic_think_tank_modifier
			}
		}
	}
}

# 2.外交シンクタンク	外交官+2 外交発言力+20% 月間忠誠度+1 月ごとチェック
country_event = {
	id = ngm_tradition.37
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_dipromatic_think_tank
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_modifier = ap_ngm_dipromatic_think_tank_modifier
				}
			}
			add_modifier = {
				modifier = ap_ngm_dipromatic_think_tank_modifier
			}
		}
	}
}

# 23.重層的国家	月間忠誠度+2
country_event = {
	id = ngm_tradition.38
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_layer_countries
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_ascension_perk = ap_ngm_ministry_of_innocence
				}
			}
			add_modifier = {
				modifier = ap_ngm_layer_countries_modifier
			}
		}
	}
}

# 23.重層的国家	月間忠誠度+2 月ごとチェック
country_event = {
	id = ngm_tradition.39
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_ascension_perk = ap_ngm_layer_countries
	}
	immediate = {
		every_subject = {
			limit = {
				NOT = {
					has_modifier = ap_ngm_layer_countries_modifier
				}
			}
			add_modifier = {
				modifier = ap_ngm_layer_countries_modifier
			}
		}
	}
}

# 前衛(新たな試みと反秩序こそ自己を表現することができる)
# 完遂時:国是を3つ選択
country_event = {
	id = ngm_tradition.41
	hide_window = yes
	is_triggered_only = yes
	trigger = {
	}
	option = {
		name = ngm_tradition.40.a
		allow = {
			NOR = {
				has_ethic = ethic_egalitarian
				has_ethic = ethic_fanatic_egalitarian
			}
			NOT = {
				has_civic = civic_free_haven
			}
		}
		force_add_civic = civic_corvee_system
		
	}
	option = {
		name = ngm_tradition.40.b
		allow = {
		}
		force_add_civic = civic_corvee_system
	}
	option = {
		name = ngm_tradition.40.c
		allow = {
		}
		force_add_civic = civic_corvee_system
	}
	option = {
		name = ngm_tradition.40.d
		allow = {
		}
		force_add_civic = civic_corvee_system
	}
	option = {
		name = ngm_tradition.40.e
		allow = {
		}
		force_add_civic = civic_corvee_system
	}
	option = {
		name = ngm_tradition.40.f
		country_event = {
			id = ngm_tradition.41
		}
	}
	option = {
		name = ngm_tradition.40.g
	}
}

#############################
######  政府用イベント #######
#############################
namespace = ngm_government
# 戦時中イベント
# 1.作戦会議(ランダム発生)
# 我が国の戦争に対して、各所から所見が届いている。統合参謀本部からは必要な補給物資を将兵に与えることで士気を高めることができると指摘している。しかし、前線指揮官達は補給物資を別の用途で使用することで戦力を向上させることができると主張している。
# これらとは別に陸軍将校からは臨時の補強計画が提案されている。
# 本日の会議は限られた資源をどのように投入するかという内容である。
country_event = {
	id = ngm_government.1
	title = ngm_government.1.name
	desc = ngm_government.1.desc
	picture = GFX_evt_announcement
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	trigger = {
		is_at_war = yes
	}
	immediate = {
		hidden_effect = {
			set_country_flag = ngm_government_war_flag
		}
		random_list = {
			20 = {
				country_event = {
					id = ngm_government.2
					days = 720
				}
			}
			20 = {
				country_event = {
					id = ngm_government.2
					days = 780
				}
			}
			20 = {
				country_event = {
					id = ngm_government.2
					days = 840
				}
			}
			20 = {
				country_event = {
					id = ngm_government.2
					days = 900
				}
			}
			20 = {
				country_event = {
					id = ngm_government.2
					days = 960
				}
			}
		}
		random_list = {
			20 = {
				country_event = {
					id = ngm_government.3
					days = 720
				}
			}
			20 = {
				country_event = {
					id = ngm_government.3
					days = 780
				}
			}
			20 = {
				country_event = {
					id = ngm_government.3
					days = 840
				}
			}
			20 = {
				country_event = {
					id = ngm_government.3
					days = 900
				}
			}
			20 = {
				country_event = {
					id = ngm_government.3
					days = 960
				}
			}
		}
	}
	# 統合参謀本部に任せる。(消費財1000消費。1年間亜空間移動速度+10%)
	option = {
		name = ngm_government.1.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				consumer_goods = -1000
			}
		}
		add_modifier = {
			modifier = ngm_government1a
			years = 1
		}
	}
	# 前線指揮官の見解を聞こう。(エネルギー1000消費。1年間艦隊連射レート+5%)
	option = {
		name = ngm_government.1.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = consumer_goods
					value >= 1000
				}
			}
		}
		owner = {
			add_resource = {
				consumer_goods = -1000
			}
		}
		add_modifier = {
			modifier = ngm_government1b
			years = 1
		}
	}
	# 陸軍のやり方に一理あるようだ。(合金500消費。3年間陸軍耐久+20%)
	option = {
		name = ngm_government.1.c
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = alloys
					value >= 500
				}
			}
		}
		owner = {
			add_resource = {
				alloys = -500
			}
		}
		add_modifier = {
			modifier = ngm_government1c
			years = 3
		}
	}
	# ふむ。私の意見ではな......(軍国のみの選択)(エネルギー、合金500消費。2年間艦隊船体値+5%)
	option = {
		name = ngm_government.1.d
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = alloys
					value >= 500
				}
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
			}
		}
		owner = {
			add_resource = {
				alloys = -500
			}
		}
		add_modifier = {
			modifier = ngm_government1d
			years = 2
		}
	}
	# 会議は躍る(効果なし)
	option = {
		name = ngm_government.1.e
	}
}

# 2.軍事パレード(戦争期間2年以上でランダム発生)
# 長引く戦争の影響で国民の中には厭戦感情を訴えるものも存在する。その者たちの不安を解消し、我が国の威力を誇示するために戦時の軍事パレードを行うよう国防省から提案があった。
country_event = {
	id = ngm_government.2
	title = ngm_government.2.name
	desc = ngm_government.2.desc
	picture = GFX_evt_announcement
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	trigger = {
		has_country_flag = ngm_government_war_flag
		is_at_war = yes
	}
	# よろしい。直ちに軍事パレードだ。(影響力100消費。)
	option = {
		name = ngm_government.2.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 100
				}
			}
		}
		owner = {
			add_resource = {
				influence = -100
			}
		}
		add_modifier = {
			modifier = ngm_government2a
			years = 1
		}
	}
	# そのような余裕はない。(消費なし)
	option = {
		name = ngm_government.2.b
	}
	# 軍事パレードではなく、追悼集会をしよう(平和のみ。影響力50消費。厭戦-10)
	option = {
		name = ngm_government.2.c
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_pacifist
					has_ethic = ethic_fanatic_pacifist
				}
				resource_stockpile_compare = {
					resource = influence
					value >= 50
				}
			}
		}
		owner = {
			add_resource = {
				influence = -50
			}
		}
		add_modifier = {
			modifier = ngm_government2c
			years = 1
		}
	}
	# 盛大にやろうじゃないか(軍国or栄望or権威のみ。影響力100、エネルギー500消費。厭戦値-10%、1年間の厭戦増加-10%)
	option = {
		name = ngm_government.2.d
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
					has_ethic = ethic_honorism
					has_ethic = ethic_fanatic_honorism
				}
				resource_stockpile_compare = {
					resource = influence
					value >= 100
				}
				resource_stockpile_compare = {
					resource = energy
					value >= 500
				}
			}
		}
		owner = {
			add_resource = {
				influence = -100
			}
			add_resource = {
				energy = -500
			}
		}
		add_modifier = {
			modifier = ngm_government2d
			years = 1
		}
	}
	# 英雄を讃え、勲章を配ろう。(実利以外。勲章を-10 厭戦値-10%、1年間の厭戦増加-10%)(編集済)
	option = {
		name = ngm_government.2.e
		allow = {
			owner = {
				NOR = {
					has_ethic = ethic_utilitarianism
					has_ethic = ethic_fanatic_utilitarianism
				}
				resource_stockpile_compare = {
					resource = ngm_order_of_merit
					value >= 10
				}
			}
		}
		owner = {
			add_resource = {
				ngm_order_of_merit = -10
			}
		}
		add_modifier = {
			modifier = ngm_government2e
			years = 1
		}
	}
}

# 3.厭戦活動(厭戦50以上かつ2年以上の戦争、攻撃側のみランダムで発生)
# 長きにわたる戦争のためか遂に(惑星名)の市民の一部が反戦デモを開始した。これは我が国の方針に反しており、徐々に規模が拡張している。
country_event = {
	id = ngm_government.3
	title = ngm_government.3.name
	desc = ngm_government.3.desc
	picture = GFX_evt_announcement
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	trigger = {
		is_war_participant = {
			who = THIS
			side = attackers
		}
		has_country_flag = ngm_government_war_flag
		is_at_war = yes
	}
	# すぐに鎮圧しろ！(3年間惑星安定度-10。厭戦+10)
	option = {
		name = ngm_government.3.a
		add_modifier = {
			modifier = ngm_government3a
			years = 3
		}
	}
	# 代表者と交渉しろ。(影響力-100)
	option = {
		name = ngm_government.3.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 100
				}
			}
		}
		owner = {
			add_resource = {
				influence = -100
			}
		}
	}
	# いつも通り行えば良い。(権威のみ。影響力-30)
	option = {
		name = ngm_government.3.c
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
				}
				resource_stockpile_compare = {
					resource = influence
					value >= 30
				}
			}
		}
		owner = {
			add_resource = {
				influence = -30
			}
		}
	}
	# 群衆に呼びかけ、軍の支持集会を開け。(軍国のみ。影響力-50。厭戦-10)
	option = {
		name = ngm_government.3.d
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_militarist
					has_ethic = ethic_fanatic_militarist
				}
				resource_stockpile_compare = {
					resource = influence
					value >= 50
				}
			}
		}
		owner = {
			add_resource = {
				influence = -50
			}
		}
		add_modifier = {
			modifier = ngm_government3d
			years = 2
		}
	}
	# とある施設なら中で叫んでくれて構わない。(権威かつ社会主義。影響力-80。当該惑星に3年間強制労働者3枠のJobを獲得)
	option = {
		name = ngm_government.3.e
		allow = {
			owner = {
				OR = {
					has_ethic = ethic_authoritarian
					has_ethic = ethic_fanatic_authoritarian
				}
				OR = {
					has_ethic = ethic_socialism
					has_ethic = ethic_fanatic_socialism
				}
				resource_stockpile_compare = {
					resource = influence
					value >= 80
				}
			}
		}
		owner = {
			add_resource = {
				influence = -80
			}
		}
		add_modifier = {
			modifier = ngm_government3e
			years = 3
		}
	}
}

country_event = {
	id = ngm_government.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = ngm_government_war_flag
		is_at_war = no
	}
	immediate = {
		remove_country_flag = ngm_government_war_flag
	}
}

# リーダーイベント
# 2.学術論争
# (リーダー名)を支持する(当該リーダーに「政府後見」の特性を付与。各研究力100を獲得)
# 政府は臨機応変に対応する。(研究力各500獲得。)
country_event = {
	id = ngm_government.6
	title = ngm_government.6.name
	desc = ngm_government.6.desc
	picture = GFX_evt_announcement
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	option = {
		name = ngm_government.6.a
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			add_trait = leader_trait_ngm_scientist_government_guardianship
		}
		add_resource = {
			physics_research = 100
			society_research = 100
			engineering_research = 100
		}
	}
	option = {
		name = ngm_government.6.b
		random_owned_leader = {
			limit = {
				leader_class = governor
			}
			add_trait = leader_trait_ngm_governor_government_guardianship
		}
		add_resource = {
			physics_research = 100
			society_research = 100
			engineering_research = 100
		}
	}
	option = {
		name = ngm_government.6.c
		add_resource = {
			physics_research = 500
			society_research = 500
			engineering_research = 500
		}
	}
}

# 3.軍事論争(提督や将軍同士での論争。どちらかを優遇するとバフが得られる。)
# (リーダー名)を支持する(当該リーダーに「政府後見」の特性を付与。)
# 政府は臨機応変に対応する。(影響力+100。)
country_event = {
	id = ngm_government.7
	title = ngm_government.7.name
	desc = ngm_government.7.desc
	picture = GFX_evt_announcement
	show_sound = event_activating_unknown_technology
	is_triggered_only = yes
	option = {
		name = ngm_government.7.a
		add_resource = {
			influence = 100
		}
	}
	option = {
		name = ngm_government.7.b
		random_owned_leader = {
			limit = {
				leader_class = admiral
			}
			add_trait = leader_trait_ngm_admiral_government_guardianship
		}
	}
	option = {
		name = ngm_government.7.c
		random_owned_leader = {
			limit = {
				leader_class = general
			}
			add_trait = leader_trait_ngm_general_government_guardianship
		}
	}
}

#############################
######  オリンピックイベント #######
#############################
# オリンピック開催地抽選開始
country_event = {
	id = ngm_government.100
	title = ngm_government.100.name
	desc = {
		text = ngm_government.100.desc
		trigger = {
			is_xenophobe = no
		}
	}
	desc = {
		text = ngm_government.100.desc.phobe
		trigger = {
			is_xenophobe = yes
		}
	}
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	immediate = {
		set_global_flag = ongoing_ngm_olympic_nomination
		set_country_flag = ngm_olympic_nomination_eligible
		event_target:global_event_country = {
			country_event = {
				id = ngm_government.102
				days = 360
			}
		}
		country_event = {
			id = ngm_government.106
			days = 1800
		}
		begin_event_chain = {
			event_chain = ngm_olympic_chain
			target = this
		}
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			begin_event_chain = {
				event_chain = ngm_olympic_chain
				target = this
			}
			country_event = {
				id = ngm_government.101
			}
		}
	}
	after = {
		custom_tooltip = enable_decision_ngm_olympic
		# Notification
		tooltip = {
			begin_event_chain = {
				event_chain = ngm_olympic_chain
				target = this
			}
		}
	}
	option = {
		name = ngm_government.100.a
		trigger = {
			has_authority = auth_corporate
		}
	}
	option = {
		name = ngm_government.100.b
		trigger = {
			NOT = {
				has_authority = auth_corporate
			}
		}
	}
}

# オリンピックノミネートが通知イベントを開始
country_event = {
	id = ngm_government.101
	title = ngm_government.101.name
	desc = {
		text = ngm_government.101.desc
		trigger = {
			NOR = {
				is_xenophobe = yes
				has_authority = auth_corporate
			}
		}
	}
	desc = {
		text = ngm_government.101.desc.phobe
		trigger = {
			is_xenophobe = yes
		}
	}
	desc = {
		text = ngm_government.101.desc.corp
		trigger = {
			has_authority = auth_corporate
		}
	}
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	immediate = {
		set_country_flag = ngm_olympic_nomination_eligible
	}
	after = {
		tooltip = {
			begin_event_chain = {
				event_chain = ngm_olympic_chain
				target = this
			}
		}
	}
	option = {
		name = ngm_government.100.a
		trigger = {
			has_authority = auth_corporate
		}
		custom_tooltip = enable_decision_market_nomination
	}
	option = {
		name = ngm_government.100.b
		trigger = {
			NOT = {
				has_authority = auth_corporate
			}
		}
		custom_tooltip = enable_decision_market_nomination
	}
}

# オリンピックの創設者 抽選会
country_event = {
	id = ngm_government.102
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_playable_country = {
			limit = {
				has_event_chain = ngm_olympic_chain
			}
			end_event_chain = ngm_olympic_chain
		}
		remove_global_flag = ongoing_ngm_olympic_nomination
		# nominees start equal, modifiers improve chances
		random_country = {
			limit = {
				is_country_type = default
				has_country_flag = ngm_olympic_nomination_eligible
			}
			weights = {
				# can use add or mult
				base = 1
				modifier = {
					add = 50
					check_variable = {
						which = ngm_olympic_rating
						value = 4
					}
				}
				modifier = {
					add = 30
					check_variable = {
						which = ngm_olympic_rating
						value = 3
					}
				}
				modifier = {
					add = 20
					check_variable = {
						which = ngm_olympic_rating
						value = 2
					}
				}
				modifier = {
					add = 10
					check_variable = {
						which = ngm_olympic_rating
						value = 1
					}
				}
				modifier = {
					factor = 0.5
					NOT = {
						any_owned_planet = {
							OR = {
								has_modifier = ngm_olympic_nominee_level_1
								has_modifier = ngm_olympic_nominee_level_2
								has_modifier = ngm_olympic_nominee_level_3
								has_modifier = ngm_olympic_nominee_level_4
								has_modifier = ngm_olympic_nominee_level_5
							}
						}
					}
				}
			}
			save_global_event_target_as = ngm_olympic_founder
			random_owned_planet = {
				weights = {
					base = 1
					modifier = {
						factor = 9999
						OR = {
							has_modifier = ngm_olympic_nominee_level_1
							has_modifier = ngm_olympic_nominee_level_2
							has_modifier = ngm_olympic_nominee_level_3
							has_modifier = ngm_olympic_nominee_level_4
							has_modifier = ngm_olympic_nominee_level_5
						}
					}
				}
				save_global_event_target_as = ngm_olympic_founder_planet
			}
			country_event = {
				id = ngm_government.103
			}
		}
		every_playable_country = {
			limit = {
				has_country_flag = ngm_olympic_nomination_eligible
			}
			every_owned_planet = {
				limit = {
					OR = {
						has_modifier = ngm_olympic_nominee_level_1
						has_modifier = ngm_olympic_nominee_level_2
						has_modifier = ngm_olympic_nominee_level_3
						has_modifier = ngm_olympic_nominee_level_4
						has_modifier = ngm_olympic_nominee_level_5
					}
				}
				# remove boosted flags
				if = {
					limit = {
						has_planet_flag = ngm_olympic_boosted_once
					}
					remove_planet_flag = ngm_olympic_boosted_once
				}
				if = {
					limit = {
						has_planet_flag = ngm_olympic_boosted_twice
					}
					remove_planet_flag = ngm_olympic_boosted_twice
				}
				# remove modifiers
				if = {
					limit = {
						has_modifier = ngm_olympic_nominee_level_1
					}
					remove_modifier = ngm_olympic_nominee_level_1
				}
				else_if = {
					limit = {
						has_modifier = ngm_olympic_nominee_level_2
					}
					remove_modifier = ngm_olympic_nominee_level_2
				}
				else_if = {
					limit = {
						has_modifier = ngm_olympic_nominee_level_3
					}
					remove_modifier = ngm_olympic_nominee_level_3
				}
				else_if = {
					limit = {
						has_modifier = ngm_olympic_nominee_level_4
					}
					remove_modifier = ngm_olympic_nominee_level_4
				}
				else_if = {
					limit = {
						has_modifier = ngm_olympic_nominee_level_5
					}
					remove_modifier = ngm_olympic_nominee_level_5
				}
			}
			set_variable = {
				which = ngm_olympic_rating
				value = 0
			}
			set_variable = {
				which = ngm_olympic_game_rating
				value = 0
			}
		}
	}
}

# オリンピックの創設者を選択されたモード
country_event = {
	id = ngm_government.103
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = on_ngm_olympic
		# コードはこのフラグを待って、オリンピックを作ります。
		country_event = {
			id = ngm_government.104
			days = 5
		}
	}
}

country_event = {
	id = ngm_government.104
	title = ngm_government.103.name
	desc = {
		text = ngm_government.103.desc
		trigger = {
			is_xenophobe = no
		}
	}
	desc = {
		text = ngm_government.103.desc.phobe
		trigger = {
			is_xenophobe = yes
		}
	}
	picture = GFX_evt_financial_instruments
	location = event_target:ngm_olympic_founder_planet
	show_sound = event_galactic_market
	is_triggered_only = yes
	immediate = {
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_founder_planet_modifier
			}
		}
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
				NOT = {
					is_same_value = root
				}
			}
			country_event = {
				id = ngm_government.105
			}
		}
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.107
				days = 180
			}
		}
		country_event = {
			id = ngm_government.109
			days = 480
		}
	}
	option = {
		name = OK
		# custom_tooltip = established_ngm_olympic_station
		tooltip = {
			end_event_chain = ngm_olympic_chain
			event_target:ngm_olympic_founder_planet = {
				add_modifier = {
					modifier = ngm_olympic_founder
					years = 1
				}
			}
		}
	}
}

# オリンピックの創設者選択通知
country_event = {
	id = ngm_government.105
	title = ngm_government.105.name
	desc = {
		text = ngm_government.105.desc
		trigger = {
			NOT = {
				is_xenophobe = yes
			}
		}
	}
	desc = {
		text = ngm_government.105.desc.phobe
		trigger = {
			is_xenophobe = yes
		}
	}
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	location = event_target:ngm_olympic_founder_planet
	immediate = {
		event_target:ngm_olympic_founder_planet.solar_system = {
			every_system_planet = {
				set_surveyed = {
					surveyed = yes
					surveyor = root
				}
			}
		}
	}
	is_triggered_only = yes
	option = {
		name = OK
		tooltip = {
			end_event_chain = ngm_olympic_chain
		}
	}
}

# オリンピック次期開催地決定イベント開始
country_event = {
	id = ngm_government.106
	title = ngm_government.106.name
	desc = {
		text = ngm_government.106.desc
		trigger = {
			is_xenophobe = no
		}
	}
	desc = {
		text = ngm_government.106.desc.phobe
		trigger = {
			is_xenophobe = yes
		}
	}
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	immediate = {
		remove_global_flag = on_ngm_olympic
		set_global_flag = ongoing_ngm_olympic_nomination
		set_country_flag = ngm_olympic_nomination_eligible
		clear_global_event_target = ngm_olympic_founder_planet
		event_target:global_event_country = {
			country_event = {
				id = ngm_government.102
				days = 360
			}
		}
		country_event = {
			id = ngm_government.106
			days = 1800
		}
		begin_event_chain = {
			event_chain = ngm_olympic_chain
			target = this
		}
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			begin_event_chain = {
				event_chain = ngm_olympic_chain
				target = this
			}
			country_event = {
				id = ngm_government.101
			}
		}
	}
	after = {
		custom_tooltip = enable_decision_market_nomination
		# Notification
		tooltip = {
			begin_event_chain = {
				event_chain = ngm_olympic_chain
				target = this
			}
		}
	}
	option = {
		name = ngm_government.100.a
		trigger = {
			has_authority = auth_corporate
		}
	}
	option = {
		name = ngm_government.100.b
		trigger = {
			NOT = {
				has_authority = auth_corporate
			}
		}
	}
}

# ↓半年後
# 開催規模決定(選択期間半年)
# (大規模、質実充実、最低限の3種類。それぞれエネルギー3k、1k、0の消費で、大規模であれば、開会式で影響力を獲得する。)
country_event = {
	id = ngm_government.107
	title = ngm_government.107.name
	desc = ngm_government.107.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	# 開会式
	immediate = {
		country_event = {
			id = ngm_government.108
			days = 240
		}
	}
	option = {
		name = ngm_government.107.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 3000
				}
			}
		}
		add_resource = {
			energy = -3000
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = ngm_olympic_l_country_flag
				days = 300
			}
		}
	}
	option = {
		name = ngm_government.107.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 1000
				}
			}
		}
		add_resource = {
			energy = -1000
		}
		hidden_effect = {
			set_timed_country_flag = {
				flag = ngm_olympic_m_country_flag
				days = 300
			}
		}
	}
	option = {
		name = ngm_government.107.c
		hidden_effect = {
			set_timed_country_flag = {
				flag = ngm_olympic_s_country_flag
				days = 300
			}
		}
	}
}

# ↓8か月後
# 開会式
# (開催規模決定の準備に応じて影響力を200、50、10を獲得)
country_event = {
	id = ngm_government.108
	title = ngm_government.108.name
	desc = ngm_government.108.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.108.a
		if = {
			limit = {
				has_country_flag = ngm_olympic_l_country_flag
			}
			add_resource = {
				influence = 200
			}
		}
		else_if = {
			limit = {
				has_country_flag = ngm_olympic_m_country_flag
			}
			add_resource = {
				influence = 50
			}
		}
		else_if = {
			limit = {
				has_country_flag = ngm_olympic_s_country_flag
			}
			add_resource = {
				influence = 10
			}
		}
	}
}

# ↓2か月後
# イベント
#   イベント表準拠
country_event = {
	id = ngm_government.109
	is_triggered_only = yes
	hide_window = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		# イベント
		random_list = {
			1 = {
				country_event = {
					id = ngm_government.110
				}
			}
			1 = {
				country_event = {
					id = ngm_government.111
				}
			}
			1 = {
				country_event = {
					id = ngm_government.112
				}
			}
			1 = {
				country_event = {
					id = ngm_government.113
				}
			}
			1 = {
				country_event = {
					id = ngm_government.114
				}
			}
			1 = {
				country_event = {
					id = ngm_government.115
				}
			}
			1 = {
				country_event = {
					id = ngm_government.116
				}
			}
			1 = {
				country_event = {
					id = ngm_government.117
				}
			}
			1 = {
				country_event = {
					id = ngm_government.118
				}
			}
			1 = {
				country_event = {
					id = ngm_government.119
				}
			}
			1 = {
				country_event = {
					id = ngm_government.120
				}
			}
			1 = {
				country_event = {
					id = ngm_government.121
				}
			}
			1 = {
				country_event = {
					id = ngm_government.122
				}
			}
			1 = {
				country_event = {
					id = ngm_government.123
				}
			}
			1 = {
				country_event = {
					id = ngm_government.124
				}
			}
			1 = {
				country_event = {
					id = ngm_government.125
				}
			}
			1 = {
				country_event = {
					id = ngm_government.126
				}
			}
			1 = {
				country_event = {
					id = ngm_government.127
				}
			}
		}
		# 競技イベント
		random_list = {
			1 = {
				country_event = {
					id = ngm_government.200
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.201
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.202
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.203
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.204
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.205
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.206
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.207
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.208
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.209
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.210
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.211
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.212
					days = 30
				}
			}
			1 = {
				country_event = {
					id = ngm_government.213
					days = 30
				}
			}
		}
		# イベント
		random_list = {
			1 = {
				country_event = {
					id = ngm_government.110
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.111
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.112
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.113
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.114
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.115
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.116
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.117
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.118
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.119
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.120
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.121
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.122
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.123
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.124
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.125
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.126
					days = 90
				}
			}
			1 = {
				country_event = {
					id = ngm_government.127
					days = 90
				}
			}
		}
		# 競技イベント
		random_list = {
			1 = {
				country_event = {
					id = ngm_government.200
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.201
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.202
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.203
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.204
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.205
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.206
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.207
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.208
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.209
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.210
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.211
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.212
					days = 105
				}
			}
			1 = {
				country_event = {
					id = ngm_government.213
					days = 105
				}
			}
		}
		country_event = {
			id = ngm_government.300
			days = 120
		}
	}
}

# イベント表
# 1.地元の好況
# エネルギー2k
# 1年間当該惑星交易価値+10%
country_event = {
	id = ngm_government.110
	title = ngm_government.110.name
	desc = ngm_government.110.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				days = 1
				id = ngm_government.150
			}
		}
	}
	option = {
		name = ngm_government.110.a
		add_resource = {
			energy = 2000
		}
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_1_event_modifier
				years = 1
			}
		}
	}
}

# 2.テロ行為の事前発覚
# 影響力+50
# 2年間当該惑星安定度+10
country_event = {
	id = ngm_government.111
	title = ngm_government.111.name
	desc = ngm_government.111.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				days = 1
				id = ngm_government.151
			}
		}
	}
	option = {
		name = ngm_government.111.a
		add_resource = {
			influence = 50
		}
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_2_event_modifier
				years = 2
			}
		}
	}
}

# 3.外交官の関心
# 影響力+50
# 1年間外交発言力+10%
country_event = {
	id = ngm_government.112
	title = ngm_government.112.name
	desc = ngm_government.112.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				days = 1
				id = ngm_government.152
			}
		}
	}
	option = {
		name = ngm_government.112.a
		add_resource = {
			influence = 50
		}
		add_modifier = {
			modifier = ngm_olympic_3_event_modifier
			years = 1
		}
	}
}

# 4.大会への熱狂
# 2年間当該惑星幸福度+10%
country_event = {
	id = ngm_government.113
	title = ngm_government.113.name
	desc = ngm_government.113.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				days = 1
				id = ngm_government.153
			}
		}
	}
	option = {
		name = ngm_government.113.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_4_event_modifier
				years = 2
			}
		}
	}
}

# 5.国家規模の好景気
# エネルギー5k
# 1年間帝国交易価値+10%
country_event = {
	id = ngm_government.114
	title = ngm_government.114.name
	desc = ngm_government.114.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.154
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.114.a
		add_resource = {
			energy = 5000
		}
		add_modifier = {
			modifier = ngm_olympic_5_event_modifier
			years = 1
		}
	}
}

# 6.テロ組織の粉砕
# 影響力+100
# 2年間帝国安定度+10
country_event = {
	id = ngm_government.115
	title = ngm_government.115.name
	desc = ngm_government.115.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.155
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.115.a
		add_resource = {
			influence = 100
		}
		add_modifier = {
			modifier = ngm_olympic_6_event_modifier
			years = 2
		}
	}
}

# 7.大会記念品のヒット
# 1年間当該惑星交易価値+10%
country_event = {
	id = ngm_government.116
	title = ngm_government.116.name
	desc = ngm_government.116.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.156
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.116.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_7_event_modifier
				years = 1
			}
		}
	}
}

# 8.移民の流入
# 当該惑星に全銀河のPopのうちランダムに2Pop発生
# 1年間当該惑星Pop成長速度+10%
country_event = {
	id = ngm_government.117
	title = ngm_government.117.name
	desc = ngm_government.117.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.157
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.117.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_8_event_modifier
				years = 1
			}
			while = {
				count = 2
				create_pop = {
					species = event_target:random_species
				}
			}
		}
	}
}

# 9.国威発揚
# 影響力+100
# 5年間帝国安定度+10
country_event = {
	id = ngm_government.118
	title = ngm_government.118.name
	desc = ngm_government.118.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.158
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.118.a
		add_resource = {
			influence = 100
		}
		add_modifier = {
			modifier = ngm_olympic_9_event_modifier
			years = 5
		}
	}
}

# 10.歴史的記録
# 5年間当該惑星統合力+10%
country_event = {
	id = ngm_government.119
	title = ngm_government.119.name
	desc = ngm_government.119.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.159
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.119.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_10_event_modifier
				years = 5
			}
		}
	}
}

# 11.世界的配信
# 1年間参加国交易価値+5%
country_event = {
	id = ngm_government.120
	title = ngm_government.120.name
	desc = ngm_government.120.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.161
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.120.a
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			add_modifier = {
				modifier = ngm_olympic_11_event_modifier
				years = 1
			}
		}
	}
}

# 12.観光地評価
# 2年間当該惑星交易価値+5%
# 2年間当該惑星移民流入+20%
country_event = {
	id = ngm_government.121
	title = ngm_government.121.name
	desc = ngm_government.121.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.162
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.121.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_12_event_modifier
				years = 2
			}
		}
	}
}

# 13.効率的運営
# 影響力+50
# 5年間帝国管理許容量+10%
country_event = {
	id = ngm_government.122
	title = ngm_government.122.name
	desc = ngm_government.122.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.163
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.110.a
		add_resource = {
			influence = 50
		}
		add_modifier = {
			modifier = ngm_olympic_13_event_modifier
			years = 5
		}
	}
}

# 14.犯罪流入
# 2年間当該惑星犯罪度+10
country_event = {
	id = ngm_government.123
	title = ngm_government.123.name
	desc = ngm_government.123.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.164
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.123.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_14_event_modifier
				years = 2
			}
		}
	}
}

# 15.大会事故発生
# 1年間惑星幸福度-5%
country_event = {
	id = ngm_government.124
	title = ngm_government.124.name
	desc = ngm_government.124.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.165
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.124.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_15_event_modifier
				years = 1
			}
		}
	}
}

# 16.運営の腐敗
# エネルギー-1k
# 影響力-50
country_event = {
	id = ngm_government.125
	title = ngm_government.125.name
	desc = ngm_government.125.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.165
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.125.a
		add_resource = {
			energy = -1000
			influence = -50
		}
	}
}

# 17.テロ発生
# 惑星上のPopをランダムに1Pop殺害
# 2年間帝国Pop幸福度-10%
# 1年間当該惑星Pop成長速度-10%
country_event = {
	id = ngm_government.126
	title = ngm_government.126.name
	desc = ngm_government.126.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.166
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.126.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_16_event_modifier
				years = 2
			}
			add_modifier = {
				modifier = ngm_olympic_17_event_modifier
				years = 1
			}
			random_owned_pop = {
				unemploy_pop = yes
				kill_pop = yes
			}
		}
	}
}

# 18.予想外の不況
# 2年間当該惑星交易価値-10%
country_event = {
	id = ngm_government.127
	title = ngm_government.127.name
	desc = ngm_government.127.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.167
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.127.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_18_event_modifier
				years = 2
			}
		}
	}
}

# イベント通知
# 1.地元の好況
country_event = {
	id = ngm_government.150
	title = ngm_government.110.name
	desc = ngm_government.110.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.110.a
	}
}

# 2.テロ行為の事前発覚
country_event = {
	id = ngm_government.151
	title = ngm_government.111.name
	desc = ngm_government.111.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.111.a
	}
}

# 3.外交官の関心
country_event = {
	id = ngm_government.152
	title = ngm_government.112.name
	desc = ngm_government.112.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.112.a
	}
}

# 4.大会への熱狂
country_event = {
	id = ngm_government.153
	title = ngm_government.113.name
	desc = ngm_government.113.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.113.a
	}
}

# 5.国家規模の好景気
country_event = {
	id = ngm_government.154
	title = ngm_government.114.name
	desc = ngm_government.114.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.114.a
	}
}

# 6.テロ組織の粉砕
country_event = {
	id = ngm_government.155
	title = ngm_government.115.name
	desc = ngm_government.115.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.115.a
	}
}

# 7.大会記念品のヒット
country_event = {
	id = ngm_government.156
	title = ngm_government.116.name
	desc = ngm_government.116.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.116.a
	}
}

# 8.移民の流入
country_event = {
	id = ngm_government.157
	title = ngm_government.117.name
	desc = ngm_government.117.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.117.a
	}
}

# 9.国威発揚
country_event = {
	id = ngm_government.158
	title = ngm_government.118.name
	desc = ngm_government.118.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.118.a
	}
}

# 10.歴史的記録
country_event = {
	id = ngm_government.159
	title = ngm_government.119.name
	desc = ngm_government.119.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.119.a
	}
}

# 11.世界的配信
country_event = {
	id = ngm_government.160
	title = ngm_government.120.name
	desc = ngm_government.120.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.120.a
	}
}

# 12.観光地評価
country_event = {
	id = ngm_government.161
	title = ngm_government.121.name
	desc = ngm_government.121.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.121.a
	}
}

# 13.効率的運営
country_event = {
	id = ngm_government.162
	title = ngm_government.122.name
	desc = ngm_government.122.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.110.a
	}
}

# 14.犯罪流入
country_event = {
	id = ngm_government.163
	title = ngm_government.123.name
	desc = ngm_government.123.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.123.a
	}
}

# 15.大会事故発生
country_event = {
	id = ngm_government.164
	title = ngm_government.124.name
	desc = ngm_government.124.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.124.a
	}
}

# 16.運営の腐敗
country_event = {
	id = ngm_government.165
	title = ngm_government.125.name
	desc = ngm_government.125.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.125.a
	}
}

# 17.テロ発生
country_event = {
	id = ngm_government.166
	title = ngm_government.126.name
	desc = ngm_government.126.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.126.a
	}
}

# 18.予想外の不況
country_event = {
	id = ngm_government.167
	title = ngm_government.127.name
	desc = ngm_government.127.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.127.a
	}
}

# 競技イベント
# 1.息をのむ競技
# 1年間全参加国幸福度+10%
country_event = {
	id = ngm_government.200
	title = ngm_government.200.name
	desc = ngm_government.200.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.220
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.200.a
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			add_modifier = {
				modifier = ngm_olympic_1_game_modifier
				years = 1
			}
		}
	}
}

# 2.感動的選手
# 1年間参加国のうちランダムで1か国幸福度+20%
country_event = {
	id = ngm_government.201
	title = ngm_government.201.name
	desc = ngm_government.201.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.221
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.201.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_1
			add_modifier = {
				modifier = ngm_olympic_2_game_modifier
				years = 1
			}
		}
	}
}

# 3.熾烈な競技
# 1年間参加国のうちランダムで2か国幸福度+20%
country_event = {
	id = ngm_government.202
	title = ngm_government.202.name
	desc = ngm_government.202.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.222
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.202.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_2
			add_modifier = {
				modifier = ngm_olympic_3_game_modifier
				years = 1
			}
		}
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_3
			add_modifier = {
				modifier = ngm_olympic_3_game_modifier
				years = 1
			}
		}
	}
}

# 4.歴史的一戦(歴史的一戦)
# 1年間参加国のうちランダムで2か国幸福度+20%
# 1年間全参加国統合力+20%
country_event = {
	id = ngm_government.203
	title = ngm_government.203.name
	desc = ngm_government.203.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.223
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.203.a
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
		}
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_5_game_modifier
				years = 1
			}
		}
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_4
			add_modifier = {
				modifier = ngm_olympic_4_game_modifier
				years = 1
			}
		}
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_5
			add_modifier = {
				modifier = ngm_olympic_4_game_modifier
				years = 1
			}
		}
	}
}

# 5.全銀河記録の樹立
# 1年間参加国のうちランダムで1か国統合力+20%、影響力+100
country_event = {
	id = ngm_government.204
	title = ngm_government.204.name
	desc = ngm_government.204.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.224
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.204.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			add_resource = {
				influence = 100
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_6
			add_modifier = {
				modifier = ngm_olympic_6_game_modifier
				years = 1
			}
			change_variable = {
				which = ngm_olympic_game_rating
				value = 3
			}
		}
	}
}

# 6.観客の熱狂
# 1年間主催国の幸福度+10%
country_event = {
	id = ngm_government.205
	title = ngm_government.205.name
	desc = ngm_government.205.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.225
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.205.a
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_7_game_modifier
				years = 1
			}
		}
	}
}

# 7.革新的チーム
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.206
	title = ngm_government.206.name
	desc = ngm_government.206.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.226
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.206.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_7
			change_variable = {
				which = ngm_olympic_game_rating
				value = 2
			}
		}
	}
}

# 8.堅実なチーム
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.207
	title = ngm_government.207.name
	desc = ngm_government.207.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.227
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.207.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_8
			change_variable = {
				which = ngm_olympic_game_rating
				value = 2
			}
		}
	}
}

# 9.競技外での表彰
# 参加国のうちランダムで1カ国に影響力+30
country_event = {
	id = ngm_government.208
	title = ngm_government.208.name
	desc = ngm_government.208.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.228
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.208.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			add_resource = {
				influence = 30
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_9
		}
	}
}

# 10.スリル感のある競技
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.209
	title = ngm_government.209.name
	desc = ngm_government.209.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.229
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.209.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_10
			change_variable = {
				which = ngm_olympic_game_rating
				value = 1
			}
		}
	}
}

# 11.ドーピングの発覚
# 1年間参加国のうちランダムで1か国幸福度-10%
# 1年間主催国社会学研究+10%
country_event = {
	id = ngm_government.210
	title = ngm_government.210.name
	desc = ngm_government.210.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.230
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.210.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_11
			add_modifier = {
				modifier = ngm_olympic_8_game_modifier
				years = 1
			}
		}
		event_target:ngm_olympic_founder_planet = {
			add_modifier = {
				modifier = ngm_olympic_9_game_modifier
				years = 1
			}
		}
	}
}

# 12.競技における不正
# 1年間参加国のうちランダムで1か国幸福度-10%
# 主催国影響力+50
country_event = {
	id = ngm_government.211
	title = ngm_government.211.name
	desc = ngm_government.211.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.231
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.211.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_12
			add_modifier = {
				modifier = ngm_olympic_10_game_modifier
				years = 1
			}
		}
		event_target:ngm_olympic_founder_planet = {
			add_resource = {
				influence = 50
			}
		}
	}
}

# 13.有力選手の故障
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.212
	title = ngm_government.212.name
	desc = ngm_government.212.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.232
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.212.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_13
			change_variable = {
				which = ngm_olympic_game_rating
				value = 1
			}
		}
	}
}

# 14.選手によるヘイトクライム
# 参加国のうちランダムで1カ国影響力-50、1年間統合力-10%
country_event = {
	id = ngm_government.213
	title = ngm_government.213.name
	desc = ngm_government.213.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		every_playable_country = {
			limit = {
				NOT = {
					is_same_value = root
				}
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.233
				days = 1
			}
		}
	}
	option = {
		name = ngm_government.213.a
		random_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			add_resource = {
				influence = -50
			}
			save_global_event_target_as = ngm_olympic_game_global_event_target_14
			add_modifier = {
				modifier = ngm_olympic_11_game_modifier
				years = 1
			}
		}
	}
}

# 競技イベント通知
# 1.息をのむ競技
# 1年間全参加国幸福度+10%
country_event = {
	id = ngm_government.220
	title = ngm_government.200.name
	desc = ngm_government.200.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.200.a
	}
}

# 2.感動的選手
# 1年間参加国のうちランダムで1か国幸福度+20%
country_event = {
	id = ngm_government.221
	title = ngm_government.201.name
	desc = ngm_government.201.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.201.a
	}
}

# 3.熾烈な競技
# 1年間参加国のうちランダムで2か国幸福度+20%
country_event = {
	id = ngm_government.222
	title = ngm_government.202.name
	desc = ngm_government.202.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.202.a
	}
}

# 4.歴史的一戦
# 1年間参加国のうちランダムで2か国幸福度+20%
# 1年間全参加国統合力+20%
country_event = {
	id = ngm_government.223
	title = ngm_government.203.name
	desc = ngm_government.203.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.203.a
	}
}

# 5.全銀河記録の樹立
# 1年間参加国のうちランダムで1か国統合力+20%、影響力+100
country_event = {
	id = ngm_government.224
	title = ngm_government.204.name
	desc = ngm_government.204.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.204.a
	}
}

# 6.観客の熱狂
# 1年間主催国の幸福度+10%
country_event = {
	id = ngm_government.225
	title = ngm_government.205.name
	desc = ngm_government.205.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.205.a
	}
}

# 7.革新的チーム
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.226
	title = ngm_government.206.name
	desc = ngm_government.206.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.206.a
	}
}

# 8.堅実なチーム
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.227
	title = ngm_government.207.name
	desc = ngm_government.207.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.207.a
	}
}

# 9.競技外での表彰
# 参加国のうちランダムで1カ国に影響力+30
country_event = {
	id = ngm_government.228
	title = ngm_government.208.name
	desc = ngm_government.208.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.208.a
	}
}

# 10.スリル感のある競技
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.229
	title = ngm_government.209.name
	desc = ngm_government.209.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.209.a
	}
}

# 11.ドーピングの発覚
# 1年間参加国のうちランダムで1か国幸福度-10%
# 1年間主催国社会学研究+10%
country_event = {
	id = ngm_government.230
	title = ngm_government.210.name
	desc = ngm_government.210.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.210.a
	}
}

# 12.競技における不正
# 1年間参加国のうちランダムで1か国幸福度-10%
# 主催国影響力+50
country_event = {
	id = ngm_government.231
	title = ngm_government.211.name
	desc = ngm_government.211.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.211.a
	}
}

# 13.有力選手の故障
# 参加国のうちランダムで1カ国優勝確率+20%
country_event = {
	id = ngm_government.232
	title = ngm_government.212.name
	desc = ngm_government.212.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.212.a
	}
}

# 14.選手によるヘイトクライム
# 参加国のうちランダムで1カ国影響力-50、1年間統合力-10%
country_event = {
	id = ngm_government.233
	title = ngm_government.213.name
	desc = ngm_government.213.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.213.a
	}
}

# 閉会式
country_event = {
	id = ngm_government.300
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		every_playable_country = {
			limit = {
				is_galactic_community_member = yes
			}
			country_event = {
				id = ngm_government.310
				days = 10
			}
		}
		country_event = {
			id = ngm_government.301
			days = 1
		}
		country_event = {
			id = ngm_government.303
			days = 4
		}
		country_event = {
			id = ngm_government.305
			days = 8
		}
		country_event = {
			id = ngm_government.311
			days = 15
		}
	}
}

# オリンピック1位
# 1位は影響力+300と5年間統合力算出+20%、5年間外交発言力+10%
country_event = {
	id = ngm_government.301
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_country = {
			limit = {
				is_country_type = default
				has_country_flag = ngm_olympic_nomination_eligible
			}
			weights = {
				base = 1
				modifier = {
					add = 50
					check_variable = {
						which = ngm_olympic_game_rating
						value = 4
					}
				}
				modifier = {
					add = 40
					check_variable = {
						which = ngm_olympic_game_rating
						value = 3
					}
				}
				modifier = {
					add = 30
					check_variable = {
						which = ngm_olympic_game_rating
						value = 2
					}
				}
				modifier = {
					add = 20
					check_variable = {
						which = ngm_olympic_game_rating
						value = 1
					}
				}
				modifier = {
					add = 10
					check_variable = {
						which = ngm_olympic_game_rating
						value = 0
					}
				}
			}
			country_event = {
				id = ngm_government.302
				days = 1
			}
		}
	}
}

country_event = {
	id = ngm_government.302
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		save_global_event_target_as = ngm_olympic_1win_event_target
		set_country_flag = ngm_olympic_1win_event_flag
		add_resource = {
			influence = 300
		}
		add_modifier = {
			modifier = ngm_olympic_1win_modifier
			years = 5
		}
	}
}

# オリンピック2位
# 2位は影響力+150と5年間統合力算出+10%、
country_event = {
	id = ngm_government.303
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_country = {
			limit = {
				is_country_type = default
				has_country_flag = ngm_olympic_nomination_eligible
			}
			weights = {
				base = 1
				modifier = {
					add = 50
					check_variable = {
						which = ngm_olympic_game_rating
						value = 4
					}
				}
				modifier = {
					add = 40
					check_variable = {
						which = ngm_olympic_game_rating
						value = 3
					}
				}
				modifier = {
					add = 30
					check_variable = {
						which = ngm_olympic_game_rating
						value = 2
					}
				}
				modifier = {
					add = 20
					check_variable = {
						which = ngm_olympic_game_rating
						value = 1
					}
				}
				modifier = {
					add = 10
					check_variable = {
						which = ngm_olympic_game_rating
						value = 0
					}
				}
				modifier = {
					factor = 0
					has_country_flag = ngm_olympic_1win_event_flag
				}
			}
			country_event = {
				id = ngm_government.304
				days = 1
			}
		}
	}
}

country_event = {
	id = ngm_government.304
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		save_global_event_target_as = ngm_olympic_2win_event_target
		set_country_flag = ngm_olympic_2win_event_flag
		add_resource = {
			influence = 150
		}
		add_modifier = {
			modifier = ngm_olympic_2win_modifier
			years = 5
		}
	}
}

# オリンピック3位
# 3位は影響力+100と5年間統合力算出+10%
country_event = {
	id = ngm_government.305
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_country = {
			limit = {
				is_country_type = default
				has_country_flag = ngm_olympic_nomination_eligible
			}
			weights = {
				base = 1
				modifier = {
					add = 50
					check_variable = {
						which = ngm_olympic_game_rating
						value = 4
					}
				}
				modifier = {
					add = 40
					check_variable = {
						which = ngm_olympic_game_rating
						value = 3
					}
				}
				modifier = {
					add = 30
					check_variable = {
						which = ngm_olympic_game_rating
						value = 2
					}
				}
				modifier = {
					add = 20
					check_variable = {
						which = ngm_olympic_game_rating
						value = 1
					}
				}
				modifier = {
					add = 10
					check_variable = {
						which = ngm_olympic_game_rating
						value = 0
					}
				}
				modifier = {
					factor = 0
					OR = {
						has_country_flag = ngm_olympic_1win_event_flag
						has_country_flag = ngm_olympic_2win_event_flag
					}
				}
			}
			country_event = {
				id = ngm_government.306
				days = 1
			}
		}
	}
}

country_event = {
	id = ngm_government.306
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		save_global_event_target_as = ngm_olympic_3win_event_target
		set_country_flag = ngm_olympic_3win_event_flag
		add_resource = {
			influence = 100
		}
		add_modifier = {
			modifier = ngm_olympic_3win_modifier
			years = 5
		}
	}
}

# オリンピック 閉会式 通知
country_event = {
	id = ngm_government.310
	title = ngm_government.300.name
	desc = ngm_government.300.desc
	picture = GFX_evt_financial_instruments
	show_sound = event_galactic_market
	is_triggered_only = yes
	location = event_target:ngm_olympic_founder_planet
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	option = {
		name = ngm_government.300.a
		if = {
			limit = {
				NOR = {
					has_country_flag = ngm_olympic_1win_event_flag
					has_country_flag = ngm_olympic_2win_event_flag
					has_country_flag = ngm_olympic_3win_event_flag
				}
			}
			add_modifier = {
				modifier = ngm_olympic_buff_modifier
				years = 2
			}
		}
		if = {
			limit = {
				has_country_flag = ngm_olympic_1win_event_flag
			}
			remove_country_flag = ngm_olympic_1win_event_flag
		}
		if = {
			limit = {
				has_country_flag = ngm_olympic_2win_event_flag
			}
			remove_country_flag = ngm_olympic_2win_event_flag
		}
		if = {
			limit = {
				has_country_flag = ngm_olympic_3win_event_flag
			}
			remove_country_flag = ngm_olympic_3win_event_flag
		}
	}
}

# オリンピック 初期化
country_event = {
	id = ngm_government.311
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_global_flag = on_ngm_olympic
	}
	immediate = {
		clear_global_event_target = ngm_olympic_game_global_event_target_1
		clear_global_event_target = ngm_olympic_game_global_event_target_2
		clear_global_event_target = ngm_olympic_game_global_event_target_3
		clear_global_event_target = ngm_olympic_game_global_event_target_4
		clear_global_event_target = ngm_olympic_game_global_event_target_5
		clear_global_event_target = ngm_olympic_game_global_event_target_6
		clear_global_event_target = ngm_olympic_game_global_event_target_7
		clear_global_event_target = ngm_olympic_game_global_event_target_8
		clear_global_event_target = ngm_olympic_game_global_event_target_9
		clear_global_event_target = ngm_olympic_game_global_event_target_10
		clear_global_event_target = ngm_olympic_game_global_event_target_11
		clear_global_event_target = ngm_olympic_game_global_event_target_12
		clear_global_event_target = ngm_olympic_game_global_event_target_13
		clear_global_event_target = ngm_olympic_game_global_event_target_14
		clear_global_event_target = ngm_olympic_1win_event_target
		clear_global_event_target = ngm_olympic_2win_event_target
		clear_global_event_target = ngm_olympic_3win_event_target
	}
}
